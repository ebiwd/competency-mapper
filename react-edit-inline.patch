diff -ur node_modules/react-edit-inline/index.js node_modules-mine/react-edit-inline/index.js
--- node_modules/react-edit-inline/index.js	2016-11-07 01:24:38.000000000 +0000
+++ node_modules-mine/react-edit-inline/index.js	2018-07-14 16:07:52.000000000 +0100
@@ -14,6 +14,10 @@
 
 var _reactDom2 = _interopRequireDefault(_reactDom);
 
+var _propTypes = require('prop-types');
+
+var _propTypes2 = _interopRequireDefault(_propTypes);
+
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 
 function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
@@ -30,7 +34,7 @@
     _inherits(InlineEdit, _React$Component);
 
     function InlineEdit() {
-        var _Object$getPrototypeO;
+        var _ref; //var _Object$getPrototypeO;
 
         var _temp, _this, _ret;
 
@@ -40,7 +44,8 @@
             args[_key] = arguments[_key];
         }
 
-        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(InlineEdit)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
+        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = InlineEdit.__proto__ || Object.getPrototypeOf(InlineEdit)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
+
             editing: _this.props.editing,
             text: _this.props.text,
             minLength: _this.props.minLength,
@@ -161,21 +166,21 @@
 }(_react2.default.Component);
 
 InlineEdit.propTypes = {
-    text: _react2.default.PropTypes.string.isRequired,
-    paramName: _react2.default.PropTypes.string.isRequired,
-    change: _react2.default.PropTypes.func.isRequired,
-    placeholder: _react2.default.PropTypes.string,
-    className: _react2.default.PropTypes.string,
-    activeClassName: _react2.default.PropTypes.string,
-    minLength: _react2.default.PropTypes.number,
-    maxLength: _react2.default.PropTypes.number,
-    validate: _react2.default.PropTypes.func,
-    style: _react2.default.PropTypes.object,
-    editingElement: _react2.default.PropTypes.string,
-    staticElement: _react2.default.PropTypes.string,
-    tabIndex: _react2.default.PropTypes.number,
-    isDisabled: _react2.default.PropTypes.bool,
-    editing: _react2.default.PropTypes.bool
+    text: _propTypes2.default.string.isRequired,
+    paramName: _propTypes2.default.string.isRequired,
+    change: _propTypes2.default.func.isRequired,
+    placeholder: _propTypes2.default.string,
+    className: _propTypes2.default.string,
+    activeClassName: _propTypes2.default.string,
+    minLength: _propTypes2.default.number,
+    maxLength: _propTypes2.default.number,
+    validate: _propTypes2.default.func,
+    style: _propTypes2.default.object,
+    editingElement: _propTypes2.default.string,
+    staticElement: _propTypes2.default.string,
+    tabIndex: _propTypes2.default.number,
+    isDisabled: _propTypes2.default.bool,
+    editing: _propTypes2.default.bool
 };
 InlineEdit.defaultProps = {
     minLength: 1,
diff -ur node_modules/react-edit-inline/index.jsx node_modules-mine/react-edit-inline/index.jsx
--- node_modules/react-edit-inline/index.jsx	2016-11-07 01:19:12.000000000 +0000
+++ node_modules-mine/react-edit-inline/index.jsx	2018-07-14 16:08:30.000000000 +0100
@@ -1,5 +1,6 @@
 import React from 'react';
 import ReactDOM from 'react-dom';
+import PropTypes from 'prop-types';
 
 function selectInputText(element) {
     element.setSelectionRange(0, element.value.length);
@@ -7,21 +8,21 @@
 
 export default class InlineEdit extends React.Component {
     static propTypes = {
-        text: React.PropTypes.string.isRequired,
-        paramName: React.PropTypes.string.isRequired,
-        change: React.PropTypes.func.isRequired,
-        placeholder: React.PropTypes.string,
-        className: React.PropTypes.string,
-        activeClassName: React.PropTypes.string,
-        minLength: React.PropTypes.number,
-        maxLength: React.PropTypes.number,
-        validate: React.PropTypes.func,
-        style: React.PropTypes.object,
-        editingElement: React.PropTypes.string,
-        staticElement: React.PropTypes.string,
-        tabIndex: React.PropTypes.number,
-        isDisabled: React.PropTypes.bool,
-        editing: React.PropTypes.bool
+        text: PropTypes.string.isRequired,
+        paramName: PropTypes.string.isRequired,
+        change: PropTypes.func.isRequired,
+        placeholder: PropTypes.string,
+        className: PropTypes.string,
+        activeClassName: PropTypes.string,
+        minLength: PropTypes.number,
+        maxLength: PropTypes.number,
+        validate: PropTypes.func,
+        style: PropTypes.object,
+        editingElement: PropTypes.string,
+        staticElement: PropTypes.string,
+        tabIndex: PropTypes.number,
+        isDisabled: PropTypes.bool,
+        editing: PropTypes.bool
     };
 
     static defaultProps = {

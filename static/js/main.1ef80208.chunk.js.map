{"version":3,"sources":["shared/components/progress-bar/progress-bar.jsx","app/containers/navigation/Navigation.jsx","app/containers/login-form/LoginForm.jsx","app/containers/masthead/Masthead.jsx","shared/components/edit-inline/EditInline.tsx","app/containers/simple-form/SimpleForm.tsx","app/components/error-loading/ErrorLoading.tsx","app/containers/framework-versions/FrameworkVersions.tsx","app/services/http/headers.js","app/services/http/http.js","app/services/competency/body.js","app/services/competency/competency.js","app/services/active-requests/active-requests.js","app/services/util/util.js","app/containers/ManageAttributes.jsx","app/containers/version-controls/VersionControls.tsx","app/containers/ManageCompetencies.jsx","app/services/courses/courses.js","app/containers/CompetencyDetails.jsx","app/components/competency-list/CompetencyList.jsx","app/components/domain-list/DomainList.jsx","app/containers/courses/Courses.jsx","app/containers/CompetencyList.jsx","app/containers/ResourceEdit.jsx","app/containers/FileUpload.jsx","app/containers/ResourceCreate.jsx","app/containers/AttributeMap.jsx","app/containers/framework-versions/VersionNotice.jsx","app/containers/ResourceDetails.jsx","app/containers/ResourcesList.jsx","app/containers/ResourcesHome.jsx","app/containers/ChangePassword.jsx","app/components/about/About.js","app/components/framework-button/FrameworkButton.jsx","app/components/framework-buttons/FrameworkButtons.jsx","app/containers/Frameworks.jsx","app/containers/CompetencySettings.jsx","app/containers/ArticleCreate.jsx","app/containers/AttributeSettings.jsx","app/containers/AttributeDemap.jsx","app/services/auth/auth.js","app/containers/Root.jsx","index.jsx","shared/components/progress-bar/progress-bar.module.css"],"names":["ProgressBar","_ref","isActive","react_default","a","createElement","Fragment","className","concat","styles","progress","role","meter","defaultProps","$","window","Navigation","navRef","React","createRef","logout","onLogout","_this","props","this","current","foundation","_this$props","roles","user","frameworkResources","tabIndex","react_router_dom","to","trainingResources","userDropdown","onClick","ref","data-dropdown-menu","data-description","includes","Component","LoginForm","state","username","password","onChange","event","setState","Object","defineProperty","currentTarget","name","value","submit","onSubmit","_this$state","_this2","_this$state2","type","autoComplete","placeholder","aria-hidden","Masthead","onLogin","data-sticky-container","id","data-sticky","data-sticky-on","data-top-anchor","data-btm-anchor","navigation_Navigation","login_form_LoginForm","progress_bar","defaultState","oriValue","active","EditInline","selfRef","inputRef","toggleActive","contains","target","reset","change","render","style","staticElement","editable","aria-label","key","text","document","addEventListener","removeEventListener","prevProps","prevState","setTimeout","focus","newValue","description","uuid","mapping","SimpleForm","preventDefault","onCreate","trim","setDefaultOption","options","length","title","showMappingField","selectOptions","map","required","ErrorLoading","message","customStyles","content","top","left","right","bottom","marginRight","transform","FrameworkVersion","versions","framework","_useState","useState","_useState2","slicedToArray","showNotes","setShowNotes","_useState3","_useState4","notes","setNotes","versionItems","filter","version","number","release_notes","lib_default","isOpen","Parser","HeadersService","classCallCheck","instance","arguments","undefined","csfrToken","localStorage","getItem","Accept","Content-Type","X-CSRF-Token","Authorization","apiUrl","process","axios","defaults","baseURL","HttpService","headers","Headers","url","credentialType","get","withCredentials","body","option","post","patch","BodyService","_links","_embedded","domainId","domainUuid","_ref$mapping","draftId","draftUuid","href","target_id","field_map_other_competency","self","lang","_links2","_embedded2","_ref2","attributeTypeId","attributeTypeUuid","competencyId","competencyUuid","mutate","_ref3","releaseNotes","field_parent","field_release_notes","field_item","nodeId","vid","attribuiteId","_links4","_embedded4","CompetencyService","http","response","data","Date","now","Body","createAttribute","createCompetency","mutateCompetency","toggleArchivingVersionedNode","attributeId","mutateAttribute","publishFramework","createDraftFramework","versionId","updateReleaseNotes","changeDomain","attribiuteId","changeAttributeSettings","resource","items","attributes","ActiveRequestsService","counter","callbacks","fn","push","index","forEach","safeFlat","array","Array","prototype","flat","reduce","acc","cur","toConsumableArray","tagsReg","RegExp","nbspReg","removeHtmlTags","htmlString","replaceBy","replace","ManageAttributes","activeRequests","competencyService","match","params","frameworkName","frameworkVersion","frameworStatus","attributeTypes","domainName","cid","competencyName","competencyData","path","location","pathname","split","loadingError","_callee","draftVersion","regenerator_default","wrap","_context","prev","next","startRequest","find","attribute","fetchFramework","t0","enqueueSnackbar","variant","finishRequest","finish","stop","scroll","loadData","fetchVersions","getAllVersionedFrameworks","allFrameworks","currentFramework","fw","toLowerCase","attribute_types","reverse","liveVersion","status","frameworkData","getVersionedDraftFramework","getVersionedFramework","competencyMatch","filterByCompetencyId","frameworkStatus","domainTitle","item","domains","domain","competencies","competency","nid","patchAttribute","isArchived","attributeType","_this$state3","archived","EditInline_EditInline","editAttribute","toggleArchive","class","_this3","_this$state4","getAttributeRows","_this$state5","error_loading_ErrorLoading","SimpleForm_SimpleForm","getAttributeList","FrameworkVersions","withSnackbar","VersionControls","release","updateNotes","createDraft","curr","originalNotes","setVersion","_useState5","_useState6","pressedRelease","setPressedRelease","_useState7","_useState8","pressedNotes","setPressedNotes","react_ckeditor_component_lib_default","events","editor","getData","cleanNotes","ManageCompetencies","frameworkVersionId","competencyTypes","releaseNewVersion","_callee2","_context2","_callee3","_context3","_callee4","_context4","refs","scrollIntoView","patchCompetency","getCompetencyRows","_this4","editCompetency","bind","_this$state6","version_controls_VersionControls","getCompetencyList","CoursesService","CompetencyDetails","coursesService","attributeDefs","resources","Promise","all","getFramework","getAttributes","getResources","getAllFrameworks","frameworkMatch","getCourses","allResources","competency_profile","profile","competency_id","console","log","objectSpread","competencyDetails","def","mapped_other_competency","resourceBlock","CompetencyList","disable","attributesGrouped","groupBy","keys","Collapsible_default","trigger","triggerWhenOpen","parentIndex","DomainList","childIndex","components_competency_list_CompetencyList","Courses","possibleConstructorReturn","getPrototypeOf","call","courses","filteredCourses","onFilter","term","e","course","test","allCourses","filterCourses","filteredProfiles","framework_label","modifiedCourse","competency_label","frameworkDescription","filteredDomains","filteredCompetencies","versionStatus","vr","domainList","domain_list_DomainList","esm","courses_Courses","_props$match$params","ResourceEdit","csrf","updateFlag","dates","dates2","target_audience","learning_outcomes","keywords","organisers","trainers","evt","newContent","csrfURL","fetch","then","Response","findresponse2","fetchResource","json","findresponse","alert","history","checkUser","start_date","end_date","ResourceEdit_EditForm","EditForm","setRedirect","redirect","handleTitle","assertThisInitialized","handleDates","handleDates2","handleType","handleDesc","handleLocation","handleURL","handleTargetAudience","handleLearningOutcomes","handleKeywords","handleOrganisers","handleTrainers","_this5","_this6","context","router","method","cookies","JSON","stringify","field_dates","field_end_date","field_type","field_description","format","field_location","field_url","field_target_audience","field_learning_outcomes","field_keywords","field_organisers","field_trainers","handleSubmit","activeClass","contextTypes","PropTypes","object","EditResources","react_router","exact","component","FileUpload","es","onDrop","acceptedFiles","reader","FileReader","onabort","onerror","onload","binaryStr","result","getElementById","append","file","readAsArrayBuffer","getRootProps","getInputProps","ResourceCreate","changeDescription","changeTargetAudience","changeLearningOutcomes","changeOrganisers","changeTrainers","token","credentials","containers_FileUpload","CreateResources","AttributeMap","resourceID","frameworkdetails","frameworkUUID","selectedAttributes","resourceDetails","resourcePath","handleSelect","checkedAttributes","attributeIDs","i","attrmap","childItems","getElementsByName","checked","getAttribute","splice","indexOf","is","lists","each","attr","fetchFrameworkDetails","findresponse1","latest_version","detail","fetchCompetencyList","nextProps","nextState","frameworkDetails","frameworkDefs","domainsOptions","attributeTypeOptions","resDetails","selectedAttributesArray","selectedCompetenciesArray","ikey","attribute_type","data-id","ListOfCompetencies","did","defaultChecked","data-test","handleAllCheck","marginLeft","marginBottom","data-uuid","handleAttributeClick","AttrMap","Modal","setAppElement","ItemVersions","modalIsOpen","openModal","closeModal","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","ResourceDetails","frameworks","showModal","selectedFramework","handleOpenModal","handleCloseModal","temp","fetchData","resourcesURL","findresponse3","display","margin","frameworkLiveVersion","check_array","isArray","Resource","date","VersionNotice","mappingBlock","overflow","overlayClassName","text-align","toUpperCase","data-close","containers_AttributeMap","selectedCompetencies","ResDetails","ResourcesList","filterType","filterMapping","userid","archiveHandle","author_id","rid","archivedStatus","field_archived","toLocaleLowerCase","some","attribute_archived","competency_archived","ListOfResources","checkAuthor","author","filterTypeHandle","filterMappingHandle","for","Resources","ResourcesHome","ResourcesHomepage","ChangePassword","handlePasswordChange","old","new1","uid","new","resp","reload","About","FrameworkButton","slice","prevVersion","newVersion","data-equalizer-watch","height","src","logo","alt","data-icon","FrameworkButtons","data-equalizer","framework_button_FrameworkButton","Frameworks","error","framework_buttons_FrameworkButtons","CompetencySettings","competencyUUID","competencyTitle","frameworkList","domainID","editDomain","handleChange","onTextChange","competencyID","setMappingText","versoinManagerURL","selectedDomainID","selectedDomainUUID","field_domain","target_uuid","dataset","selectedIndex","competency_title","domain_id","domain_title","domainOptions","domainArray","d","colSpan","CompetencySettingsRoot","AttributeSettings","attributeID","attributeTypeID","attributeTypeUUID","changeSettings","handleCompetencyChange","handleTypeChange","selectedCompetencyID","field_competency","selectedCompetencyUUID","selectedAttributeTypeID","field_attribute_type","selectedAttributeTypeUUID","attribute_title","attribute_type_id","attribute_type_title","competencyOptions","competencyArray","attributeTypeArray","rowSpan","AttributeSettingsRoot","AttributeDemap","demap","AttributeDemapRoot","loginUrl","logoutUrl","login","_x","_x2","_login","apply","pass","sent","setItem","current_user","csrf_token","logout_token","abrupt","removeItem","Root","handleActiveRequests","hasPendingRequests","detectUserChangesFromOtherTabs","handleLogin","t1","handleLogout","foundationExtendEBI","subcription","build","maxSnack","anchorOrigin","vertical","horizontal","preventDuplicate","masthead_Masthead","Root_ProtectedRoute","condition","ProtectedRoute","objectWithoutProperties","assign","root","ReactDOM","basename","containers_Root","module","exports"],"mappings":"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","file":"static/js/main.1ef80208.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './progress-bar.module.css';\r\n\r\nfunction ProgressBar({ isActive }) {\r\n  return (\r\n    <React.Fragment>\r\n      {isActive && (\r\n        <div\r\n          className={`warning progress ${styles.progress}`}\r\n          role=\"progressbar\"\r\n        >\r\n          <div className={`progress-meter ${styles.meter}`} />\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nProgressBar.defaultProps = {\r\n  isActive: false\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  isActive: PropTypes.bool\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst $ = window.$;\r\n\r\nclass Navigation extends Component {\r\n  navRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    $(this.navRef.current).foundation();\r\n  }\r\n\r\n  logout = () => {\r\n    const { onLogout } = this.props;\r\n    onLogout();\r\n  };\r\n\r\n  render() {\r\n    const { roles, user } = this.props;\r\n\r\n    const frameworkResources = (\r\n      <li>\r\n        <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n          tabIndex=\"0\"\r\n          className=\"dropdown-on-dark-background\"\r\n        >\r\n          Manage Competencies\r\n        </a>\r\n        <ul className=\"menu vertical\">\r\n          <li>\r\n            <Link to=\"/framework/bioexcel/manage/competencies\">BioExcel</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/framework/corbel/manage/competencies\">CORBEL</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/framework/iscb/manage/competencies\">ISCB</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/framework/ritrain/manage/competencies\">RITrain</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/framework/nhs/manage/competencies\">NHS</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/framework/cineca/manage/competencies\">CINECA</Link>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    );\r\n\r\n    const trainingResources = (\r\n      <li>\r\n        <Link to=\"/all-training-resources\">Manage Training Resources</Link>\r\n      </li>\r\n    );\r\n\r\n    const userDropdown = (\r\n      <li>\r\n        <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n          tabIndex=\"0\"\r\n          className=\"dropdown-on-light-background\"\r\n        >\r\n          <i className=\"fas fa-user\" /> Hi {user}\r\n        </a>\r\n        <ul className=\"menu vertical\">\r\n          <li>\r\n            <Link to={'/user/change/password'}>Change password</Link>\r\n          </li>\r\n          <li>\r\n            <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n              onClick={this.logout}\r\n            >\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <nav ref={this.navRef}>\r\n        <ul\r\n          className=\"dropdown menu float-left\"\r\n          data-dropdown-menu\r\n          data-description=\"navigational\"\r\n        >\r\n          {roles.includes('framework_manager') && frameworkResources}\r\n          {roles.includes('content_manager') && trainingResources}\r\n        </ul>\r\n        <ul\r\n          className=\"dropdown menu float-right\"\r\n          data-dropdown-menu\r\n          data-description=\"user tasks\"\r\n        >\r\n          {userDropdown}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LoginForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  submit = () => {\r\n    const { onSubmit } = this.props;\r\n    const { username, password } = this.state;\r\n    if (username && password) {\r\n      onSubmit(username, password);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    return (\r\n      <nav>\r\n        {/* The wrapping in an `ul.menu.float-left > li` is necessary for the sticky header to work */}\r\n        <ul className=\"menu float-left small-12\">\r\n          <li className=\"small-12 margin-bottom-large\">\r\n            <label className=\"columns small-4 medium-3 large-2 margin-top-large\">\r\n              <input\r\n                value={username}\r\n                name=\"username\"\r\n                onChange={event => this.onChange(event)}\r\n                type=\"text\"\r\n                autoComplete=\"username\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </label>\r\n            <label className=\"columns small-4 medium-3 large-2 margin-top-large\">\r\n              <input\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={event => this.onChange(event)}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <div className=\"columns small-4 medium-6 large-8 margin-top-large\">\r\n              <button\r\n                className=\"button\"\r\n                type=\"button\"\r\n                onClick={() => this.submit()}\r\n              >\r\n                <i className=\"fa fa-key\" aria-hidden=\"true\" /> Login\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ProgressBar from '../../../shared/components/progress-bar/progress-bar';\r\nimport Navigation from '../navigation/Navigation';\r\nimport LoginForm from '../login-form/LoginForm';\r\n\r\nclass Masthead extends Component {\r\n  static propTypes = {\r\n    user: PropTypes.string.isRequired,\r\n    roles: PropTypes.string.isRequired,\r\n    onLogin: PropTypes.func.isRequired,\r\n    onLogout: PropTypes.func.isRequired\r\n  };\r\n\r\n  onLogin = (username, password) => {\r\n    this.props.onLogin(username, password);\r\n  };\r\n\r\n  onLogout = () => {\r\n    this.props.onLogout();\r\n  };\r\n\r\n  render() {\r\n    const { roles, user, isActive } = this.props;\r\n\r\n    return (\r\n      <div data-sticky-container>\r\n        <header\r\n          id=\"masthead\"\r\n          className=\"masthead\"\r\n          data-sticky\r\n          data-sticky-on=\"large\"\r\n          data-top-anchor=\"main-content-area:top\"\r\n          data-btm-anchor=\"main-content-area:bottom\"\r\n        >\r\n          <div className=\"masthead-inner row\">\r\n            <div className=\"columns medium-12\" id=\"local-title\">\r\n              <h1>\r\n                <Link to=\"/\">Competency Mapper</Link>\r\n              </h1>\r\n            </div>\r\n            {user && roles ? (\r\n              <Navigation roles={roles} user={user} onLogout={this.onLogout} />\r\n            ) : (\r\n              <LoginForm onSubmit={this.onLogin} />\r\n            )}\r\n          </div>\r\n          <ProgressBar isActive={isActive} />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Masthead;\r\n","import React, { Component } from 'react';\r\n\r\nimport './EditInline.css';\r\n\r\nconst defaultProps = {\r\n  style: {} as Record<string, string | number>,\r\n  text: '',\r\n  change: (newValue: string) => {},\r\n  staticElement: 'div',\r\n  editable: true\r\n};\r\n\r\ntype Props = Partial<typeof defaultProps>;\r\n\r\nconst defaultState = {\r\n  oriValue: '',\r\n  value: '',\r\n  active: false\r\n};\r\n\r\ntype State = Readonly<typeof defaultState>;\r\n\r\nexport default class EditInline extends Component<Props, State> {\r\n  static defaultProps = defaultProps; // No idea why the props are marked as optional (see '!' in the code below)\r\n  readonly state: State = defaultState;\r\n  selfRef = React.createRef<HTMLDivElement>();\r\n  inputRef = React.createRef<HTMLInputElement>();\r\n\r\n  componentDidMount() {\r\n    const { text } = this.props;\r\n    this.setState({ value: text!, oriValue: text! });\r\n    document.addEventListener('mousedown', this.toggleActive);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.toggleActive);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: State) {\r\n    const { active } = this.state;\r\n    if (active && !prevState.active) {\r\n      // Unable to focus on the input element.\r\n      // this.inputRef.current && this.inputRef.current.focus();\r\n\r\n      // Dirty: The only way I was able to focus on the input element.\r\n      setTimeout(\r\n        () => this.inputRef.current && this.inputRef.current.focus(),\r\n        0\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleActive = (event: MouseEvent) => {\r\n    if (\r\n      this.selfRef.current &&\r\n      this.selfRef.current.contains(event.target as Node)\r\n    ) {\r\n      this.setState({ active: true });\r\n      return;\r\n    }\r\n    this.reset();\r\n  };\r\n\r\n  onChange(value: string) {\r\n    this.setState({ value });\r\n  }\r\n\r\n  reset = () => {\r\n    const { oriValue, active } = this.state;\r\n    if (active) {\r\n      this.setState({ active: false, value: oriValue });\r\n    }\r\n  };\r\n\r\n  submit = () => {\r\n    const { change } = this.props;\r\n    const { value } = this.state;\r\n    change!(value);\r\n    this.setState({ active: false, oriValue: value });\r\n  };\r\n\r\n  render = () => {\r\n    const { style, staticElement, editable } = this.props;\r\n    const { value, active } = this.state;\r\n\r\n    if (!editable) {\r\n      return React.createElement(staticElement!, { style }, value);\r\n    }\r\n\r\n    if (!active) {\r\n      return React.createElement(staticElement!, { style, ref: this.selfRef }, [\r\n        value,\r\n        <i\r\n          key=\"dummy\"\r\n          className=\"icon icon-common icon-edit icon-left-spacer\"\r\n          aria-label=\"edit\"\r\n        />\r\n      ]);\r\n    }\r\n\r\n    return (\r\n      <div className=\"edit-inline-container\" ref={this.selfRef}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"inner-input\"\r\n          value={value}\r\n          onChange={event => this.onChange(event.target.value)}\r\n          ref={this.inputRef}\r\n          // autoFocus={true} // It only works when it is rendered after mounting\r\n        />\r\n        <div className=\"edit-inline-controls\">\r\n          <button\r\n            className=\"button margin-bottom-none\"\r\n            type=\"button\"\r\n            onClick={this.submit}\r\n          >\r\n            <i\r\n              className=\"icon icon-common icon-check\"\r\n              aria-label=\"accept changes\"\r\n            />\r\n          </button>\r\n          <button\r\n            className=\"button margin-bottom-none\"\r\n            type=\"button\"\r\n            onClick={this.reset}\r\n          >\r\n            <i\r\n              className=\"icon icon-common icon-undo\"\r\n              aria-label=\"undo changes\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nconst defaultProps = {\r\n  showMappingField: false\r\n};\r\n\r\ntype Props = {\r\n  title: string;\r\n  placeholder: string;\r\n  options: Record<'description' | 'uuid', string>[];\r\n  onCreate(newValue: string, uuid: string, mapping: string): any;\r\n} & Partial<typeof defaultProps>;\r\n\r\nconst defaultState = {\r\n  description: '',\r\n  uuid: '',\r\n  mapping: ''\r\n};\r\n\r\ntype State = Readonly<typeof defaultState>;\r\n\r\nexport default class SimpleForm extends Component<Props, State> {\r\n  static defaultProps = defaultProps;\r\n  readonly state = defaultState;\r\n\r\n  componentDidMount() {\r\n    this.setDefaultOption();\r\n  }\r\n\r\n  setDefaultOption() {\r\n    const { options } = this.props;\r\n    if (options.length) {\r\n      const { uuid } = options[0];\r\n      this.setState({ uuid });\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.setState(defaultState);\r\n    this.setDefaultOption();\r\n  }\r\n\r\n  onChange = (event: React.FormEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    event.preventDefault();\r\n    const { value } = event.currentTarget;\r\n    const name = event.currentTarget.name;\r\n    // https://github.com/Microsoft/TypeScript/issues/13948\r\n    if (name === 'uuid') {\r\n      this.setState({ [name]: value });\r\n    }\r\n    if (name === 'description') {\r\n      this.setState({ [name]: value });\r\n    }\r\n    if (name === 'mapping') {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const { onCreate } = this.props;\r\n    const { description, uuid, mapping } = this.state;\r\n\r\n    if (description.trim() && uuid) {\r\n      onCreate(description, uuid, mapping);\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { title, placeholder, options, showMappingField } = this.props;\r\n    const { description, uuid, mapping } = this.state;\r\n\r\n    const selectOptions = options.map(({ description, uuid }) => (\r\n      <option key={uuid} value={uuid}>\r\n        {description}\r\n      </option>\r\n    ));\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"callout\">\r\n        <h4>{title}</h4>\r\n        <div className=\"row\">\r\n          <div className=\"column large-7\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder={placeholder}\r\n              name=\"description\"\r\n              value={description}\r\n              required\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div className=\"column large-3\">\r\n            <select name=\"uuid\" value={uuid} required onChange={this.onChange}>\r\n              {selectOptions}\r\n            </select>\r\n          </div>\r\n          <div className=\"column large-2\">\r\n            <input type=\"submit\" className=\"button\" value=\"Create\" />\r\n          </div>\r\n          {showMappingField ? (\r\n            <div className=\"column\">\r\n              <label>\r\n                Maps to competency/attribute from other framework\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Framework (version), competency or attribute\"\r\n                  name=\"mapping\"\r\n                  value={mapping}\r\n                  onChange={this.onChange}\r\n                />\r\n              </label>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst defaultProps = {\r\n  message: 'Sorry, there was a problem when fetching the data!',\r\n  style: {} as Record<string, string | number>\r\n};\r\n\r\ntype Props = Partial<typeof defaultProps>;\r\n\r\nexport const ErrorLoading: React.FC<Props> = ({ message, style }) => {\r\n  return (\r\n    <div className=\"margin-top-large callout alert\" style={style}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorLoading.defaultProps = defaultProps;\r\n\r\nexport default ErrorLoading;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport Parser from 'html-react-parser';\r\n\r\nimport { Version } from '../../../models/version';\r\n\r\ntype Props = {\r\n  versions: Version[];\r\n  framework: string;\r\n  style: string;\r\n};\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nexport const FrameworkVersion: React.FC<Props> = ({ versions, framework }) => {\r\n  const [showNotes, setShowNotes] = useState(false);\r\n  const [notes, setNotes] = useState('');\r\n\r\n  let versionNumber = '';\r\n\r\n  const versionItems = versions\r\n    .filter(version => version.number !== 'draft')\r\n    .map(version => (\r\n      <li key={version.id}>\r\n        <Link to={`/framework/${framework}/${version.number}`}>\r\n          {version.number}\r\n        </Link>{' '}\r\n        <button\r\n          className=\"anchor-like\"\r\n          onClick={() => {\r\n            setNotes('Version: ' + version.number + version.release_notes);\r\n            setShowNotes(true);\r\n          }}\r\n        >\r\n          (release notes)\r\n        </button>\r\n      </li>\r\n    ));\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={showNotes} style={customStyles}>\r\n        <h4>Release notes for {framework} </h4>\r\n        {Parser(notes)}\r\n        {versionItems}\r\n        <div className=\"padding-top-large\">\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              setNotes('');\r\n              setShowNotes(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"callout\">\r\n        <h5>Framework versions</h5>\r\n        {versions.length === 0 ? (\r\n          'No previous versions'\r\n        ) : (\r\n          <ul>{versionItems}</ul>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrameworkVersion;\r\n","class HeadersService {\r\n  static instance;\r\n\r\n  constructor() {\r\n    if (HeadersService.instance) {\r\n      return this.instance;\r\n    }\r\n\r\n    HeadersService.instance = this;\r\n  }\r\n\r\n  get(type = 'hal+json') {\r\n    const csfrToken = window.localStorage.getItem('csrf_token');\r\n    if (type === 'json') {\r\n      return {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-CSRF-Token': csfrToken,\r\n        Authorization: 'Basic'\r\n      };\r\n    }\r\n\r\n    return {\r\n      Accept: 'application/hal+json',\r\n      'Content-Type': 'application/hal+json',\r\n      'X-CSRF-Token': csfrToken,\r\n      Authorization: 'Basic'\r\n    };\r\n  }\r\n}\r\n\r\nexport default HeadersService;\r\n","import Headers from './headers';\r\nimport axios from 'axios';\r\n\r\nexport const apiUrl = process.env.REACT_APP_API_URL;\r\n\r\naxios.defaults.baseURL = apiUrl;\r\n\r\nclass HttpService {\r\n  static instance;\r\n  headers = new Headers();\r\n\r\n  constructor() {\r\n    if (HttpService.instance) {\r\n      return HttpService.instance;\r\n    }\r\n\r\n    HttpService.instance = this;\r\n  }\r\n\r\n  get(url, credentialType = '') {\r\n    if (credentialType) {\r\n      return axios.get(url, {\r\n        headers: this.headers.get(credentialType),\r\n        withCredentials: true\r\n      });\r\n    }\r\n    return axios.get(url);\r\n  }\r\n\r\n  post(url, body, option = 'hal+json') {\r\n    return axios.post(url, body, {\r\n      headers: this.headers.get(option),\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  patch(url, body, option = 'hal+json') {\r\n    return axios.patch(url, body, {\r\n      headers: this.headers.get(option),\r\n      withCredentials: true\r\n    });\r\n  }\r\n}\r\n\r\nexport default HttpService;\r\n","import { apiUrl } from '../http/http';\r\n\r\nclass BodyService {\r\n  static createCompetency({\r\n    description,\r\n    domainId,\r\n    domainUuid,\r\n    mapping = '',\r\n    draftId,\r\n    draftUuid\r\n  }) {\r\n    return {\r\n      _links: {\r\n        type: {\r\n          href: `${apiUrl}/rest/type/node/competency`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/competency/field_domain`]: {\r\n          href: `${apiUrl}/node/${domainId}?_format=hal_json`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/competency/field_versions`]: [\r\n          {\r\n            href: `http://local.competency-mapper/taxonomy/term/${draftId}?_format=hal_json`\r\n          }\r\n        ]\r\n      },\r\n      title: [\r\n        {\r\n          value: description\r\n        }\r\n      ],\r\n      type: [\r\n        {\r\n          target_id: 'competency'\r\n        }\r\n      ],\r\n      field_map_other_competency: [\r\n        {\r\n          value: mapping\r\n        }\r\n      ],\r\n      _embedded: {\r\n        [`${apiUrl}/rest/relation/node/competency/field_versions`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/taxonomy/term/${draftId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/taxonomy_term/version`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: draftUuid\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        [`${apiUrl}/rest/relation/node/competency/field_domain`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/node/${domainId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/node/domain`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: domainUuid\r\n              }\r\n            ],\r\n            lang: 'en'\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n\r\n  static createAttribute({\r\n    description,\r\n    attributeTypeId,\r\n    attributeTypeUuid,\r\n    competencyId,\r\n    competencyUuid,\r\n    draftId,\r\n    draftUuid\r\n  }) {\r\n    return {\r\n      _links: {\r\n        type: {\r\n          href: `${apiUrl}/rest/type/node/attribute`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/attribute/field_competency`]: {\r\n          href: `${apiUrl}/node/${competencyId}?_format=hal_json`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/attribute/field_attribute_type`]: {\r\n          href: `${apiUrl}/node/${attributeTypeId}?_format=hal_json`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/competency/field_versions`]: [\r\n          {\r\n            href: `http://local.competency-mapper/taxonomy/term/${draftId}?_format=hal_json`\r\n          }\r\n        ]\r\n      },\r\n      title: [\r\n        {\r\n          value: description\r\n        }\r\n      ],\r\n      type: [\r\n        {\r\n          target_id: 'attribute'\r\n        }\r\n      ],\r\n\r\n      _embedded: {\r\n        [`${apiUrl}/rest/relation/node/competency/field_versions`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/taxonomy/term/${draftId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/taxonomy_term/version`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: draftUuid\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        [`${apiUrl}/rest/relation/node/attribute/field_competency`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/node/${competencyId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/node/competency`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: competencyUuid\r\n              }\r\n            ],\r\n            lang: 'en'\r\n          }\r\n        ],\r\n        [`${apiUrl}/rest/relation/node/attribute/field_attribute_type`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/node/${attributeTypeId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/node/attribute_type`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: attributeTypeUuid\r\n              }\r\n            ],\r\n            lang: 'en'\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n\r\n  static mutateCompetency(key, value) {\r\n    return BodyService.mutate(key, value, 'competency');\r\n  }\r\n\r\n  static mutateAttribute(key, value) {\r\n    return BodyService.mutate(key, value, 'attribute');\r\n  }\r\n\r\n  static mutate(key, value, target) {\r\n    return {\r\n      _links: {\r\n        type: {\r\n          href: `${apiUrl}/rest/type/node/${target}`\r\n        }\r\n      },\r\n      [key]: [\r\n        {\r\n          value: value\r\n        }\r\n      ],\r\n      type: [\r\n        {\r\n          target_id: target\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  static publishFramework(framework, version, releaseNotes) {\r\n    return {\r\n      type: [\r\n        {\r\n          target_id: 'article'\r\n        }\r\n      ],\r\n      title: [\r\n        {\r\n          value: framework\r\n        }\r\n      ],\r\n      field_parent: [\r\n        {\r\n          value: framework\r\n        }\r\n      ],\r\n      field_release_notes: [\r\n        {\r\n          value: releaseNotes\r\n        }\r\n      ],\r\n      field_item: [\r\n        {\r\n          value: version\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  static createDraftFramework(framework) {\r\n    return {\r\n      type: [\r\n        {\r\n          target_id: 'article'\r\n        }\r\n      ],\r\n      title: [\r\n        {\r\n          value: 'draft'\r\n        }\r\n      ],\r\n      field_parent: [\r\n        {\r\n          value: framework\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  static toggleArchivingVersionedNode(framework, nodeId) {\r\n    return {\r\n      type: [\r\n        {\r\n          target_id: 'article'\r\n        }\r\n      ],\r\n      field_parent: [\r\n        {\r\n          value: framework\r\n        }\r\n      ],\r\n      field_item: [\r\n        {\r\n          value: nodeId\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  static updateReleaseNotes(notes) {\r\n    return {\r\n      _links: {\r\n        type: {\r\n          href:\r\n            //'https://dev-competency-mapper.pantheonsite.io/rest/type/taxonomy_term/version'\r\n            `${apiUrl}/rest/type/taxonomy_term/version`\r\n        }\r\n      },\r\n      vid: [\r\n        {\r\n          target_id: 'version'\r\n        }\r\n      ],\r\n      field_release_notes: [\r\n        {\r\n          value: notes\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  // Change domain service\r\n\r\n  static changeDomain(competencyId, domainId, domainUuid, mapping) {\r\n    return {\r\n      _links: {\r\n        self: {\r\n          href: `${apiUrl}/node/${competencyId}?_format=hal_json`\r\n        },\r\n        type: {\r\n          href: `${apiUrl}/rest/type/node/competency`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/competency/field_domain`]: {\r\n          href: `${apiUrl}/node/${domainId}?_format=hal_json`\r\n        }\r\n      },\r\n      field_map_other_competency: [\r\n        {\r\n          value: mapping\r\n        }\r\n      ],\r\n      type: {\r\n        target_id: 'competency'\r\n      },\r\n      _embedded: {\r\n        [`${apiUrl}/rest/relation/node/competency/field_domain`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/node/${domainId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/node/domain`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: domainUuid\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n\r\n  // Change competency service\r\n\r\n  static changeAttributeSettings(\r\n    attribuiteId,\r\n    competencyId,\r\n    competencyUuid,\r\n    attributeTypeId,\r\n    attributeTypeUuid\r\n  ) {\r\n    return {\r\n      _links: {\r\n        self: {\r\n          href: `${apiUrl}/node/${attribuiteId}?_format=hal_json`\r\n        },\r\n        type: {\r\n          href: `${apiUrl}/rest/type/node/attribute`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/attribute/field_competency`]: {\r\n          href: `${apiUrl}/node/${competencyId}?_format=hal_json`\r\n        },\r\n        [`${apiUrl}/rest/relation/node/attribute/field_attribute_type`]: {\r\n          href: `${apiUrl}/node/${attributeTypeId}?_format=hal_json`\r\n        }\r\n      },\r\n      type: {\r\n        target_id: 'attribute'\r\n      },\r\n      _embedded: {\r\n        [`${apiUrl}/rest/relation/node/attribute/field_competency`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/node/${competencyId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/node/competency`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: competencyUuid\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        [`${apiUrl}/rest/relation/node/attribute/field_attribute_type`]: [\r\n          {\r\n            _links: {\r\n              self: {\r\n                href: `${apiUrl}/node/${attributeTypeId}?_format=hal_json`\r\n              },\r\n              type: {\r\n                href: `${apiUrl}/rest/type/node/attribute_type`\r\n              }\r\n            },\r\n            uuid: [\r\n              {\r\n                value: attributeTypeUuid\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nexport default BodyService;\r\n","import HttpService from '../http/http';\r\nimport Body from './body';\r\n\r\nclass CompetencyService {\r\n  static instance;\r\n  http = new HttpService();\r\n\r\n  constructor() {\r\n    if (CompetencyService.instance) {\r\n      return this.instance;\r\n    }\r\n\r\n    CompetencyService.instance = this;\r\n  }\r\n\r\n  async getFramework(framework) {\r\n    const response = await this.http.get(\r\n      `/api/v1/framework/${framework}?_format=json`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  // TODO: change name\r\n  async getVersionedDraftFramework(framework, version) {\r\n    const response = await this.http.get(\r\n      `/api/${framework}/edit?_format=json&timestamp=${Date.now()}`,\r\n      'json'\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  // TODO: change name\r\n  async getVersionedFramework(framework, version) {\r\n    const response = await this.http.get(\r\n      `/api/${framework}/${version}?_format=json&timestamp=${Date.now()}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async getAllFrameworks() {\r\n    const response = await this.http.get(`/api/v1/framework?_format=json`);\r\n    return response.data;\r\n  }\r\n\r\n  // TODO: change name\r\n  async getAllVersionedFrameworks() {\r\n    const response = await this.http.get(\r\n      `/api/version_manager?_format=json&timestamp=${Date.now()}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async createAttribute(options) {\r\n    const response = await this.http.post(\r\n      `/node?_format=hal_json`,\r\n      Body.createAttribute(options)\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async createCompetency(options) {\r\n    const response = await this.http.post(\r\n      `/node?_format=hal_json`,\r\n      Body.createCompetency(options)\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async patchCompetency(competencyId, key, value) {\r\n    const response = await this.http.patch(\r\n      `/node/${competencyId}?_format=hal_json`,\r\n      Body.mutateCompetency(key, value)\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  // TODO: change name\r\n  async toggleArchivingVersionedNode(framework, nodeId) {\r\n    const response = await this.http.patch(\r\n      `/api/${framework}/edit?_format=json`,\r\n      Body.toggleArchivingVersionedNode(framework, nodeId),\r\n      'json'\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async patchAttribute(attributeId, key, value) {\r\n    const response = await this.http.patch(\r\n      `/node/${attributeId}?_format=hal_json`,\r\n      Body.mutateAttribute(key, value)\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async publishFramework(framework, version, releaseNotes) {\r\n    const response = await this.http.patch(\r\n      '/api/version_manager?_format=json',\r\n      Body.publishFramework(framework, version, releaseNotes),\r\n      'json'\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async createDraftFramework(framework) {\r\n    const response = await this.http.post(\r\n      '/api/version_manager?_format=json',\r\n      Body.createDraftFramework(framework),\r\n      'json'\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async updateReleaseNotes(notes, versionId) {\r\n    const response = await this.http.patch(\r\n      `/taxonomy/term/${versionId}?_format=hal_json`,\r\n      Body.updateReleaseNotes(notes)\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async changeDomain(competencyId, domainId, domainUuid, mapping) {\r\n    const response = await this.http.patch(\r\n      `/node/${competencyId}?_format=hal_json`,\r\n      Body.changeDomain(competencyId, domainId, domainUuid, mapping)\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async changeAttributeSettings(\r\n    attribiuteId,\r\n    competencyId,\r\n    competencyUuid,\r\n    attributeTypeId,\r\n    attributeTypeUuid\r\n  ) {\r\n    const response = await this.http.patch(\r\n      `/node/${attribiuteId}?_format=hal_json`,\r\n      Body.changeAttributeSettings(\r\n        attribiuteId,\r\n        competencyId,\r\n        competencyUuid,\r\n        attributeTypeId,\r\n        attributeTypeUuid\r\n      )\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async demap(resource, items) {\r\n    const response = await this.http.get(\r\n      `/api/mapping?_format=hal_json&resource=` +\r\n        resource +\r\n        `&items=` +\r\n        items +\r\n        `&timestamp=${Date.now()}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async attrmap(resource, attributes) {\r\n    const response = await this.http.get(\r\n      `/api/mapping?_format=hal_json&resource=` +\r\n        resource +\r\n        `&attributes=` +\r\n        attributes +\r\n        `&timestamp=${Date.now()}`\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport default CompetencyService;\r\n","class ActiveRequestsService {\r\n  static instance;\r\n  counter = 0;\r\n  callbacks = [];\r\n\r\n  get isActive() {\r\n    return !!this.counter;\r\n  }\r\n\r\n  constructor() {\r\n    if (ActiveRequestsService.instance) {\r\n      return ActiveRequestsService.instance;\r\n    }\r\n\r\n    ActiveRequestsService.instance = this;\r\n  }\r\n\r\n  addEventListener(fn) {\r\n    return this.callbacks.push(fn);\r\n  }\r\n\r\n  removeEventListener(index) {\r\n    return delete this.callbacks[index - 1];\r\n  }\r\n\r\n  startRequest() {\r\n    if (this.counter === 0) {\r\n      this.callbacks.forEach(fn => fn && fn(true));\r\n    }\r\n    ++this.counter;\r\n  }\r\n\r\n  finishRequest() {\r\n    if (this.counter === 1) {\r\n      this.callbacks.forEach(fn => fn && fn(false));\r\n    }\r\n\r\n    if (this.counter > 0) {\r\n      --this.counter;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ActiveRequestsService;\r\n","// In modern browser (es2018), instead of `reduce` it is possible to call `flat`\r\nexport const safeFlat = array =>\r\n  Array.prototype.flat\r\n    ? array.flat()\r\n    : array.reduce((acc, cur) => [...acc, ...cur], []);\r\n\r\nconst tagsReg = new RegExp('</?.+?/?>', 'g');\r\nconst nbspReg = /&nbsp;/g;\r\n\r\nexport const removeHtmlTags = (htmlString, replaceBy = '') =>\r\n  htmlString.replace(tagsReg, replaceBy).replace(nbspReg, ' ');\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport InlineEdit from '../../shared/components/edit-inline/EditInline';\r\nimport SimpleForm from '../containers/simple-form/SimpleForm';\r\nimport ErrorLoading from '../components/error-loading/ErrorLoading';\r\nimport FrameworkVersions from '../containers/framework-versions/FrameworkVersions';\r\n\r\nimport { withSnackbar } from 'notistack';\r\nimport CompetencyService from '../services/competency/competency';\r\nimport ActiveRequestsService from '../services/active-requests/active-requests';\r\nimport { safeFlat } from '../services/util/util';\r\n\r\nclass ManageAttributes extends React.Component {\r\n  activeRequests = new ActiveRequestsService();\r\n  competencyService = new CompetencyService();\r\n\r\n  state = {\r\n    // framework level\r\n    framework: this.props.match.params.framework,\r\n    frameworkName: '',\r\n    frameworkVersion: '',\r\n    frameworStatus: '',\r\n    attributeTypes: [], // defined at framework level\r\n    versions: [],\r\n\r\n    // domain level\r\n    domainId: '',\r\n    domainName: '',\r\n\r\n    // competency level\r\n    competencyId: this.props.match.params.cid,\r\n    competencyUuid: '',\r\n    competencyName: '',\r\n    competencyData: [],\r\n\r\n    path: this.props.location.pathname.split('/'),\r\n\r\n    loadingError: false,\r\n    editable: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scroll(0, 0);\r\n    this.loadData();\r\n  }\r\n\r\n  async loadData(framework) {\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.fetchVersions(framework);\r\n      await this.fetchFramework(framework);\r\n    } catch (error) {\r\n      this.setState({ loadingError: true });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  async fetchVersions() {\r\n    const { framework } = this.state;\r\n    const allFrameworks = await this.competencyService.getAllVersionedFrameworks();\r\n    const currentFramework = allFrameworks.filter(\r\n      fw => fw.title.toLowerCase() === framework\r\n    );\r\n    if (currentFramework.length > 0) {\r\n      const attributeTypes = currentFramework[0].attribute_types.map(\r\n        attribute => ({ description: attribute.title, uuid: attribute.uuid })\r\n      );\r\n      this.setState({\r\n        versions: currentFramework[0].versions.reverse(),\r\n        attributeTypes\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchFramework() {\r\n    const { framework, versions, competencyId } = this.state;\r\n    const liveVersion = versions.filter(version => version.status === 'live');\r\n    const draftVersion = versions.filter(version => version.status === 'draft');\r\n    let frameworkData = [];\r\n    let editable = false;\r\n\r\n    if (draftVersion.length) {\r\n      frameworkData = await this.competencyService.getVersionedDraftFramework(\r\n        framework\r\n      );\r\n      editable = true;\r\n    } else {\r\n      if (liveVersion.length) {\r\n        frameworkData = await this.competencyService.getVersionedFramework(\r\n          framework,\r\n          liveVersion[0].number\r\n        );\r\n      }\r\n    }\r\n\r\n    const competencyMatch = this.filterByCompetencyId(\r\n      frameworkData,\r\n      competencyId\r\n    );\r\n\r\n    if (competencyMatch.length) {\r\n      this.setState({\r\n        frameworkName: frameworkData[0].title,\r\n        frameworkVersion: frameworkData[0].version,\r\n        frameworkStatus: frameworkData[0].status,\r\n        domainName: competencyMatch[0].domainTitle,\r\n        domainId: competencyMatch[0].domainId,\r\n        competencyUuid: competencyMatch[0].uuid,\r\n        competencyName: competencyMatch[0].title,\r\n        competencyData: competencyMatch[0],\r\n        editable\r\n      });\r\n    }\r\n  }\r\n\r\n  filterByCompetencyId(data, id) {\r\n    return safeFlat(\r\n      data.map(item =>\r\n        safeFlat(\r\n          item.domains.map(domain =>\r\n            domain.competencies\r\n              .filter(competency => competency.id === id)\r\n              .map(competency => {\r\n                competency.domainTitle = domain.title;\r\n                competency.domainId = domain.nid;\r\n                return competency;\r\n              })\r\n          )\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  createAttribute = async (description, attributeTypeUuid, mapping) => {\r\n    const {\r\n      competencyId,\r\n      competencyUuid,\r\n      attributeTypes,\r\n      versions\r\n    } = this.state;\r\n    const draftVersion = versions.filter(version => version.number === 'draft');\r\n\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      const attributeTypeId = attributeTypes.find(\r\n        attribute => attribute.uuid === attributeTypeUuid\r\n      ).id;\r\n      const draftId = draftVersion[0].id;\r\n      const draftUuid = draftVersion[0].uuid;\r\n      await this.competencyService.createAttribute({\r\n        description,\r\n        competencyId,\r\n        competencyUuid,\r\n        attributeTypeId,\r\n        attributeTypeUuid,\r\n        draftId,\r\n        draftUuid\r\n      });\r\n\r\n      await this.fetchFramework();\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  };\r\n\r\n  async editAttribute(attributeId, title) {\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.competencyService.patchAttribute(attributeId, 'title', title);\r\n      await this.fetchFramework();\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  async toggleArchive(attributeId, isArchived) {\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.competencyService.patchAttribute(\r\n        attributeId,\r\n        'field_archived',\r\n        isArchived === '1' ? false : true\r\n      );\r\n      await this.fetchFramework();\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  getAttributeRows(attributeType) {\r\n    const { competencyData, editable } = this.state;\r\n\r\n    return competencyData.attributes\r\n      .filter(attribute => attribute.type === attributeType.description)\r\n      .map(attribute => {\r\n        if (editable) {\r\n          return (\r\n            <tr key={attribute.uuid}>\r\n              <td className={attribute.archived === '1' ? 'strikeout' : ''}>\r\n                <InlineEdit\r\n                  text={attribute.title}\r\n                  change={newValue =>\r\n                    this.editAttribute(attribute.id, newValue)\r\n                  }\r\n                  editable={attribute.archived === '1' ? false : true}\r\n                />\r\n              </td>\r\n\r\n              <td>\r\n                <button\r\n                  className=\"cursor\"\r\n                  onClick={() =>\r\n                    this.toggleArchive(attribute.id, attribute.archived)\r\n                  }\r\n                >\r\n                  {attribute.archived === '1' ? (\r\n                    <span className=\"fas fa-toggle-on\">\r\n                      <span>Archived</span>\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"fas fa-toggle-off\" />\r\n                  )}\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <Link\r\n                  to={`/framework/${this.state.framework}/competency/${\r\n                    this.state.competencyId\r\n                  }/attribute/${attribute.id}/settings`}\r\n                >\r\n                  <i class=\"fas fa-cog\" />\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n\r\n        if (attribute.archived === '1') {\r\n          return null;\r\n        }\r\n        return (\r\n          <tr key={attribute.uuid}>\r\n            <td className={attribute.archived === '1' ? 'strikeout' : ''}>\r\n              <InlineEdit\r\n                text={attribute.title}\r\n                change={newValue => this.editAttribute(attribute.id, newValue)}\r\n                editable={editable}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n  }\r\n\r\n  getAttributeList() {\r\n    const { attributeTypes, editable } = this.state;\r\n    return attributeTypes.map(attributeType => (\r\n      <React.Fragment key={attributeType.uuid}>\r\n        <tr className=\"secondary-background-important white-color\">\r\n          <td>\r\n            <strong>\r\n              <em>{attributeType.description}</em>\r\n            </strong>\r\n          </td>\r\n          {editable && <td className=\"small-1\">Archive</td>}\r\n          {editable && <td className=\"small-1\">Settings</td>}\r\n        </tr>\r\n        {this.getAttributeRows(attributeType)}\r\n      </React.Fragment>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      framework,\r\n      frameworkName,\r\n      frameworkVersion,\r\n      frameworkStatus,\r\n      attributeTypes,\r\n      versions,\r\n      domainId,\r\n      domainName,\r\n      competencyName,\r\n      competencyData,\r\n      loadingError,\r\n      editable\r\n    } = this.state;\r\n\r\n    if (loadingError) {\r\n      return <ErrorLoading />;\r\n    }\r\n\r\n    if (competencyData.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <h2>Manage attributes</h2>\r\n        <h4>\r\n          <Link to={`/framework/${framework}/manage/competencies`}>\r\n            {frameworkName}\r\n          </Link>\r\n          {' / '}\r\n          <Link to={`/framework/${framework}/manage/competencies/${domainId}`}>\r\n            {domainName}\r\n          </Link>\r\n          {' / '}\r\n          {competencyName}\r\n        </h4>\r\n\r\n        <p>\r\n          <span className=\"tag\">{frameworkVersion}</span>\r\n          <span className=\"tag secondary-background\">\r\n            {frameworkStatus === '' ? 'draft' : frameworkStatus}\r\n          </span>\r\n        </p>\r\n\r\n        {editable && (\r\n          <SimpleForm\r\n            title=\"Create new attribute\"\r\n            placeholder=\"Attribute description\"\r\n            options={attributeTypes}\r\n            onCreate={this.createAttribute}\r\n          />\r\n        )}\r\n\r\n        <table>\r\n          <tbody>{this.getAttributeList()}</tbody>\r\n        </table>\r\n\r\n        <FrameworkVersions framework={framework} versions={versions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(ManageAttributes);\r\n","import React, { FC, useState } from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport CKEditor from 'react-ckeditor-component';\r\n\r\nimport { Version } from '../../../models/version';\r\n\r\ntype Props = {\r\n  release(version: string, notes: string): void;\r\n  updateNotes(notes: string): void;\r\n  createDraft(): void;\r\n  versions: Version[];\r\n  editable: false;\r\n};\r\n\r\nexport const VersionControls: React.FC<Props> = ({\r\n  release,\r\n  updateNotes,\r\n  createDraft,\r\n  versions,\r\n  editable\r\n}) => {\r\n  const liveVersion = versions.reduce((prev, curr) => {\r\n    if (curr.status === 'live') {\r\n      return curr.number;\r\n    }\r\n    return prev;\r\n  }, '');\r\n\r\n  const originalNotes = versions.reduce((prev, curr) => {\r\n    if (curr.number === 'draft') {\r\n      return curr.release_notes;\r\n    }\r\n    return prev;\r\n  }, '');\r\n\r\n  const [version, setVersion] = useState('');\r\n  const [notes, setNotes] = useState(originalNotes);\r\n  const [pressedRelease, setPressedRelease] = useState(false);\r\n  const [pressedNotes, setPressedNotes] = useState(false);\r\n\r\n  const reset = () => {\r\n    setVersion('');\r\n    setPressedRelease(false);\r\n  };\r\n\r\n  const publish = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const cleanNotes = notes.trim();\r\n    if (pressedRelease && version && cleanNotes) {\r\n      release(version, cleanNotes);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  if (editable) {\r\n    return (\r\n      <div>\r\n        <Modal isOpen={pressedNotes}>\r\n          <CKEditor\r\n            content={notes}\r\n            events={{\r\n              change: (event: any) => setNotes(event.editor.getData())\r\n            }}\r\n          />\r\n          <div className=\"padding-top-large\">\r\n            <span className=\"padding-right-small\">\r\n              <button\r\n                className=\"button\"\r\n                onClick={() => {\r\n                  setNotes(originalNotes);\r\n                  setPressedNotes(false);\r\n                }}\r\n              >\r\n                Close\r\n              </button>\r\n            </span>\r\n            <button\r\n              className=\"button\"\r\n              onClick={() => {\r\n                updateNotes(notes);\r\n                setPressedNotes(false);\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n        <Modal isOpen={pressedRelease}>\r\n          <form onSubmit={publish}>\r\n            <label>\r\n              Version{' '}\r\n              {liveVersion\r\n                ? `(live version ${liveVersion})`\r\n                : '(no live version)'}\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"1.0.0\"\r\n                value={version}\r\n                required\r\n                onChange={event => setVersion(event.currentTarget.value.trim())}\r\n              />\r\n            </label>\r\n            <CKEditor\r\n              content={notes}\r\n              events={{\r\n                change: (event: any) => setNotes(event.editor.getData())\r\n              }}\r\n            />\r\n            <div className=\"padding-top-large\">\r\n              <span className=\"padding-right-small\">\r\n                <button className=\"button\" onClick={reset}>\r\n                  Cancel\r\n                </button>\r\n              </span>\r\n              <button className=\"button\" type=\"submit\">\r\n                Publish\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n        <span className=\"padding-right-small\">\r\n          <button className=\"button\" onClick={() => setPressedRelease(true)}>\r\n            Release new version\r\n          </button>\r\n        </span>\r\n        <button className=\"button\" onClick={() => setPressedNotes(true)}>\r\n          Update release notes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"padding-right-small\">\r\n        <button className=\"button\" onClick={() => createDraft()}>\r\n          Create draft\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VersionControls;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport InlineEdit from '../../shared/components/edit-inline/EditInline';\r\nimport SimpleForm from '../containers/simple-form/SimpleForm';\r\nimport ErrorLoading from '../components/error-loading/ErrorLoading';\r\nimport FrameworkVersions from '../containers/framework-versions/FrameworkVersions';\r\nimport VersionControls from '../containers/version-controls/VersionControls';\r\n\r\nimport { withSnackbar } from 'notistack';\r\nimport CompetencyService from '../services/competency/competency';\r\nimport ActiveRequestsService from '../services/active-requests/active-requests';\r\n\r\nclass ManageCompetencies extends React.Component {\r\n  activeRequests = new ActiveRequestsService();\r\n  competencyService = new CompetencyService();\r\n\r\n  state = {\r\n    framework: '',\r\n    frameworkName: '',\r\n    frameworkData: [],\r\n    frameworkVersion: '',\r\n    frameworkVersionId: '',\r\n    frameworkStatus: '',\r\n    competencyTypes: [],\r\n    versions: [],\r\n    loadingError: false,\r\n    editable: false\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { framework } = props.match.params;\r\n    if (framework !== state.framework) {\r\n      return {\r\n        framework,\r\n        frameworkData: [],\r\n        loadingError: false\r\n      };\r\n    }\r\n\r\n    // No state update necessary\r\n    return null;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { framework, domainId } = this.props.match.params;\r\n    await this.loadData(framework);\r\n\r\n    if (domainId) {\r\n      setTimeout(() => {\r\n        const ref = this.refs[domainId];\r\n        if (ref) {\r\n          ref.scrollIntoView();\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const { framework, frameworkData, loadingError } = this.state;\r\n    if (framework !== prevState.framework) {\r\n      if (frameworkData.length === 0 && !loadingError) {\r\n        this.loadData(framework);\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadData(framework) {\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.fetchVersions(framework);\r\n      await this.fetchFramework(framework);\r\n    } catch (error) {\r\n      this.setState({ loadingError: true });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  async fetchVersions(framework) {\r\n    const allFrameworks = await this.competencyService.getAllVersionedFrameworks();\r\n    const currentFramework = allFrameworks.filter(\r\n      fw => fw.title.toLowerCase() === framework\r\n    );\r\n    if (currentFramework.length > 0) {\r\n      this.setState({ versions: currentFramework[0].versions.reverse() });\r\n    }\r\n  }\r\n\r\n  async fetchFramework(framework) {\r\n    const { versions } = this.state;\r\n    const liveVersion = versions.filter(version => version.status === 'live');\r\n    const draftVersion = versions.filter(version => version.status === 'draft');\r\n    let frameworkData = [];\r\n    let editable = false;\r\n    if (draftVersion.length) {\r\n      frameworkData = await this.competencyService.getVersionedDraftFramework(\r\n        framework\r\n      );\r\n      this.setState({ frameworkVersionId: draftVersion[0].id });\r\n      editable = true;\r\n    } else {\r\n      if (liveVersion.length) {\r\n        frameworkData = await this.competencyService.getVersionedFramework(\r\n          framework,\r\n          liveVersion[0].number\r\n        );\r\n      }\r\n    }\r\n\r\n    if (frameworkData.length) {\r\n      const competencyTypes = frameworkData[0].domains.map(domain => ({\r\n        description: domain.title,\r\n        uuid: domain.uuid\r\n      }));\r\n      this.setState({\r\n        frameworkName: frameworkData[0].title,\r\n        frameworkData,\r\n        frameworkVersion: frameworkData[0].version,\r\n        frameworkStatus: frameworkData[0].status,\r\n        competencyTypes,\r\n        editable\r\n      });\r\n    }\r\n  }\r\n\r\n  createCompetency = async (description, domainUuid, mapping) => {\r\n    const { framework, frameworkData, versions } = this.state;\r\n    const draftVersion = versions.filter(version => version.number === 'draft');\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      const domainId = frameworkData[0].domains.find(\r\n        domain => domain.uuid === domainUuid\r\n      ).nid;\r\n      const draftId = draftVersion[0].id;\r\n      const draftUuid = draftVersion[0].uuid;\r\n      await this.competencyService.createCompetency({\r\n        description,\r\n        domainId,\r\n        domainUuid,\r\n        mapping,\r\n        draftId,\r\n        draftUuid\r\n      });\r\n      await this.fetchFramework(framework);\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  };\r\n\r\n  async editCompetency(cid, title) {\r\n    const { framework } = this.state;\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.competencyService.patchCompetency(cid, 'title', title);\r\n      await this.fetchFramework(framework);\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  async toggleArchive(cid, isArchived) {\r\n    const { framework } = this.state;\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.competencyService.toggleArchivingVersionedNode(framework, cid);\r\n      await this.fetchFramework(framework);\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  releaseNewVersion = async (version, notes) => {\r\n    const { framework } = this.state;\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.competencyService.publishFramework(framework, version, notes);\r\n      this.loadData(framework);\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  };\r\n\r\n  updateNotes = async notes => {\r\n    const { framework, frameworkVersionId } = this.state;\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.competencyService.updateReleaseNotes(\r\n        notes,\r\n        frameworkVersionId\r\n      );\r\n      this.loadData(framework);\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  };\r\n\r\n  createDraft = async () => {\r\n    const { framework } = this.state;\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await this.competencyService.createDraftFramework(framework);\r\n      this.loadData(framework);\r\n    } catch (e) {\r\n      this.props.enqueueSnackbar('Unable to perform the request', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  };\r\n\r\n  getCompetencyList() {\r\n    const { frameworkData, editable } = this.state;\r\n    return frameworkData[0].domains.map(domain => (\r\n      <React.Fragment key={domain.nid}>\r\n        <tr\r\n          className=\"secondary-background-important white-color\"\r\n          ref={domain.nid}\r\n        >\r\n          <td>\r\n            <h4>{domain.title}</h4>\r\n          </td>\r\n          {editable && <td className=\"small-1\">Archive</td>}\r\n          <td>Attributes</td>\r\n          {editable && <td className=\"small-1\">Settings</td>}\r\n        </tr>\r\n        {this.getCompetencyRows(domain.competencies)}\r\n      </React.Fragment>\r\n    ));\r\n  }\r\n\r\n  getCompetencyRows(competencies) {\r\n    const { framework, editable } = this.state;\r\n    return competencies.map(competency => {\r\n      if (editable) {\r\n        return (\r\n          <tr key={competency.id}>\r\n            <td className={competency.archived === '1' ? 'strikeout' : ''}>\r\n              <InlineEdit\r\n                text={competency.title}\r\n                change={newValue =>\r\n                  this.editCompetency(competency.id, newValue)\r\n                }\r\n                editable={competency.archived === '1' ? false : true}\r\n              />\r\n            </td>\r\n\r\n            <td>\r\n              <button\r\n                className=\"cursor\"\r\n                onClick={this.toggleArchive.bind(\r\n                  this,\r\n                  competency.id,\r\n                  competency.archived\r\n                )}\r\n              >\r\n                {competency.archived === '1' ? (\r\n                  <span className=\"fas fa-toggle-on\">\r\n                    <span>Archived</span>\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"fas fa-toggle-off\" />\r\n                )}\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <Link\r\n                to={`/framework/${framework}/manage/competencies/${\r\n                  competency.id\r\n                }/manage-attributes`}\r\n              >\r\n                <i className=\"fas fa-sitemap\" />\r\n              </Link>\r\n            </td>\r\n\r\n            <td>\r\n              <Link\r\n                to={`/framework/${framework}/competency/${\r\n                  competency.id\r\n                }/settings`}\r\n              >\r\n                <i class=\"fas fa-cog\" />\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n\r\n      if (competency.archived === '1') {\r\n        return null;\r\n      }\r\n\r\n      return (\r\n        <tr key={competency.id}>\r\n          <td>\r\n            <InlineEdit\r\n              text={competency.title}\r\n              change={newValue => this.editCompetency(competency.id, newValue)}\r\n              editable={editable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <Link\r\n              to={`/framework/${framework}/manage/competencies/${\r\n                competency.id\r\n              }/manage-attributes`}\r\n            >\r\n              <i className=\"fas fa-sitemap\" />\r\n            </Link>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      framework,\r\n      frameworkName,\r\n      frameworkData,\r\n      frameworkVersion,\r\n      frameworkStatus,\r\n      competencyTypes,\r\n      versions,\r\n      loadingError,\r\n      editable\r\n    } = this.state;\r\n\r\n    if (loadingError) {\r\n      return <ErrorLoading />;\r\n    }\r\n\r\n    if (frameworkData.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <h2>Manage framework</h2>\r\n        <h4>{frameworkName}</h4>\r\n\r\n        <p>\r\n          <span className=\"tag\">{frameworkVersion}</span>\r\n          <span className=\"tag secondary-background\">\r\n            {frameworkStatus === '' ? 'draft' : frameworkStatus}\r\n          </span>\r\n        </p>\r\n\r\n        <VersionControls\r\n          editable={editable}\r\n          createDraft={this.createDraft}\r\n          versions={versions}\r\n          release={this.releaseNewVersion}\r\n          updateNotes={this.updateNotes}\r\n        />\r\n\r\n        {editable && (\r\n          <SimpleForm\r\n            title=\"Create new competency\"\r\n            placeholder=\"Competency description\"\r\n            options={competencyTypes}\r\n            onCreate={this.createCompetency}\r\n            showMappingField={true}\r\n          />\r\n        )}\r\n\r\n        <table>\r\n          <tbody>{this.getCompetencyList()}</tbody>\r\n        </table>\r\n\r\n        <FrameworkVersions framework={framework} versions={versions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(ManageCompetencies);\r\n","import HttpService from '../http/http';\r\n\r\nexport const apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nclass CoursesService {\r\n  static instance;\r\n  http = new HttpService();\r\n\r\n  constructor() {\r\n    if (CoursesService.instance) {\r\n      return this.instance;\r\n    }\r\n\r\n    CoursesService.instance = this;\r\n  }\r\n\r\n  async getCourses() {\r\n    const response = await this.http.get(\r\n      /*`${apiUrl}/api/v1/training-resources/all?_format=json`*/\r\n      `${apiUrl}/api/resources?_format=json&timestamp=${Date.now()}`\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport default CoursesService;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withSnackbar } from 'notistack';\r\nimport ActiveRequestsService from '../services/active-requests/active-requests';\r\nimport CompetencyService from '../services/competency/competency';\r\nimport CoursesService from '../services/courses/courses';\r\n\r\nclass CompetencyDetails extends React.Component {\r\n  activeRequests = new ActiveRequestsService();\r\n  competencyService = new CompetencyService();\r\n  coursesService = new CoursesService();\r\n\r\n  state = {\r\n    framework: this.props.match.params.framework,\r\n    version: this.props.location.pathname.split('/'),\r\n    frameworkData: [],\r\n    competencyId: this.props.match.params.cid,\r\n    attributeDefs: [],\r\n    resources: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await Promise.all([\r\n        this.getFramework(),\r\n        this.getAttributes(),\r\n        this.getResources()\r\n      ]);\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  async getFramework() {\r\n    const { framework } = this.state;\r\n    const { version } = this.state;\r\n    const frameworkData = await this.competencyService.getVersionedFramework(\r\n      framework,\r\n      version[3]\r\n    );\r\n\r\n    this.setState({\r\n      frameworkData\r\n    });\r\n  }\r\n\r\n  async getAttributes() {\r\n    const allFrameworks = await this.competencyService.getAllFrameworks();\r\n    const { framework } = this.state;\r\n    const frameworkMatch = allFrameworks.filter(\r\n      item => item.name.toLowerCase() === framework\r\n    );\r\n    if (frameworkMatch.length) {\r\n      const attributeDefs = frameworkMatch[0].attribute_types.map(\r\n        attribute => attribute.title\r\n      );\r\n      this.setState({ attributeDefs });\r\n    }\r\n  }\r\n\r\n  async getResources() {\r\n    try {\r\n      const allResources = await this.coursesService.getCourses();\r\n      const resources = allResources.filter(\r\n        resource =>\r\n          !!resource.competency_profile.find(\r\n            profile =>\r\n              // !!profile.domains.find(\r\n              //   domain =>\r\n              //     !!domain.competencies.find(\r\n              //       competency => competency.id === this.state.competencyId\r\n              //     )\r\n              // )\r\n\r\n              profile.competency_id === this.state.competencyId\r\n          )\r\n      );\r\n\r\n      this.setState({ resources });\r\n      /*const resources = [{\"id\":1, \"title\":this.state.version[3]}];*/\r\n      this.setState({ resources });\r\n    } catch (error) {\r\n      this.props.enqueueSnackbar('Unable to retrieve training resources', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  }\r\n\r\n  resourceBlock() {\r\n    const { resources } = this.state;\r\n    return resources.map(resource => (\r\n      <li key={resource.id}>\r\n        <Link to={`/training-resources/${resource.id}`}>{resource.title}</Link>\r\n      </li>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      competencyId,\r\n      frameworkData,\r\n      attributeDefs,\r\n      resources\r\n    } = this.state;\r\n\r\n    const competencies = [];\r\n    console.log(this.state.competencyId);\r\n    frameworkData.forEach(item =>\r\n      item.domains.forEach(domain =>\r\n        domain.competencies.forEach(competency => {\r\n          if (competency.id === competencyId) {\r\n            competencies.push({\r\n              ...competency,\r\n              framework: item.title,\r\n              domain: domain.title\r\n            });\r\n          }\r\n        })\r\n      )\r\n    );\r\n\r\n    const competencyDetails = competencies.map(competency => (\r\n      <div key={competency.id}>\r\n        <div className=\"row\">\r\n          <div className=\"column large-12\">\r\n            <h4>\r\n              {' '}\r\n              {competency.framework} / {competency.domain}\r\n            </h4>\r\n            <h4>{competency.title}</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"column large-8\">\r\n            <ul>\r\n              {attributeDefs.map(def => {\r\n                return (\r\n                  <div key={def}>\r\n                    <div className=\"margin-top-medium\">\r\n                      {' '}\r\n                      <strong>\r\n                        <em>{def}</em>\r\n                      </strong>\r\n                    </div>\r\n                    {competency.attributes.map(attribute => {\r\n                      if (attribute.type === def) {\r\n                        return <li key={attribute.id}>{attribute.title} </li>;\r\n                      }\r\n                      return null;\r\n                    })}\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <div className=\"column large-4\">\r\n            <div className=\"callout notice industry-background white-color\">\r\n              <p>Competency derived from:</p>\r\n              <p>\r\n                {' '}\r\n                {competency.mapped_other_competency\r\n                  ? competency.mapped_other_competency\r\n                  : 'No data available'}{' '}\r\n              </p>\r\n            </div>\r\n\r\n            {resources.length === 0 ? null : (\r\n              <div className=\"callout notice training-background white-color\">\r\n                <p>Training resources mapped to this competency</p>\r\n                <ul>{this.resourceBlock()}</ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"column large-12\">\r\n          <h3>Competency details</h3>\r\n          {competencyDetails}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(CompetencyDetails);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Collapsible from 'react-collapsible';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { groupBy } from 'lodash-es';\r\nimport './CompetencyList.css';\r\n\r\nfunction CompetencyList({ index, framework, competency, disable, version }) {\r\n  const attributesGrouped = groupBy(competency.attributes, 'type');\r\n  const attributesTypes = Object.keys(attributesGrouped);\r\n  const attributes = attributesTypes.map(type => {\r\n    const attributes = attributesGrouped[type].map(attribute => (\r\n      <li key={attribute.id}>{attribute.title}</li>\r\n    ));\r\n    return (\r\n      <div key={type}>\r\n        <em>{type}</em>\r\n        <ul>{attributes}</ul>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  if (competency.archived === '1') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <Collapsible\r\n          trigger={\r\n            <div className=\"open-close-title\">\r\n              <span>{competency.title}</span>\r\n              <span className=\"icon icon-common icon-plus float-right\">\r\n                <p className=\"show-for-sr\">show more</p>\r\n              </span>\r\n            </div>\r\n          }\r\n          triggerWhenOpen={\r\n            <div className=\"open-close-title\">\r\n              <span>{competency.title}</span>\r\n              <span className=\"icon icon-common icon-minus float-right\">\r\n                <p className=\"show-for-sr\">show less</p>\r\n              </span>\r\n            </div>\r\n          }\r\n        >\r\n          <div className=\"padding-left-large padding-top-large\">\r\n            <Link\r\n              to={`/framework/${framework}/${version}/competency/details/${\r\n                competency.id\r\n              }`}\r\n            >\r\n              <span className=\"float-right\">\r\n                <i className=\"icon icon-spacer icon-common icon-info\" />\r\n                More details\r\n              </span>\r\n            </Link>\r\n            {attributes}\r\n          </div>\r\n        </Collapsible>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nCompetencyList.defaultProps = {\r\n  parentIndex: 0,\r\n  index: 0,\r\n  disable: true\r\n};\r\n\r\nCompetencyList.propTypes = {\r\n  parentIndex: PropTypes.number,\r\n  index: PropTypes.number,\r\n  framework: PropTypes.string,\r\n  competency: PropTypes.shape({\r\n    title: PropTypes.string\r\n  }),\r\n  disable: PropTypes.bool\r\n};\r\n\r\nexport default CompetencyList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CompetencyList from '../competency-list/CompetencyList';\r\n\r\nfunction DomainList({ index, framework, domain, disable, version }) {\r\n  const competencies = domain.competencies.map((competency, childIndex) => (\r\n    <CompetencyList\r\n      key={competency.id}\r\n      index={childIndex}\r\n      framework={framework}\r\n      competency={competency}\r\n      disable={disable}\r\n      version={version}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <tbody>\r\n      <tr className=\"white-color secondary-background\">\r\n        <td>\r\n          <h4> {domain.title}</h4>\r\n        </td>\r\n      </tr>\r\n      {competencies}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nDomainList.defaultProps = {\r\n  domain: { title: '', competencies: [] },\r\n  disable: true\r\n};\r\n\r\nDomainList.propTypes = {\r\n  framework: PropTypes.string,\r\n  domain: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    competencies: PropTypes.array\r\n  }),\r\n  disable: PropTypes.bool\r\n};\r\n\r\nexport default DomainList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorLoading from '../../components/error-loading/ErrorLoading';\r\n\r\nimport ActiveRequestsService from '../../services/active-requests/active-requests';\r\nimport CoursesService from '../../services/courses/courses';\r\nimport { safeFlat } from '../../services/util/util';\r\n\r\nclass Courses extends Component {\r\n  static propTypes = {\r\n    framework: PropTypes.string,\r\n    version: PropTypes.string\r\n  };\r\n\r\n  state = {\r\n    courses: [],\r\n    filteredCourses: [],\r\n    filter: '',\r\n    loadingError: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.framework = props.framework;\r\n    this.state.version = props.version;\r\n  }\r\n\r\n  coursesService = new CoursesService();\r\n  activeRequests = new ActiveRequestsService();\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      const allCourses = await this.coursesService.getCourses();\r\n      const courses = this.filterCourses(allCourses);\r\n      this.setState({ courses, filteredCourses: courses });\r\n    } catch (error) {\r\n      this.setState({ loadingError: true });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  filterCourses(allCourses) {\r\n    const { framework } = this.state;\r\n    const { version } = this.state;\r\n    const filteredCourses = [];\r\n    allCourses.forEach(course => {\r\n      if (course.archived === '1') {\r\n        return;\r\n      }\r\n\r\n      const filteredProfiles = course.competency_profile.filter(\r\n        //profile => (profile.title || '').toLowerCase() === framework\r\n        profile => (profile.framework_label || '').toLowerCase() === framework\r\n      );\r\n\r\n      if (filteredProfiles.length === 0) {\r\n        return;\r\n      }\r\n\r\n      const modifiedCourse = {\r\n        ...course,\r\n        competencies: safeFlat(\r\n          filteredProfiles.map(\r\n            profile =>\r\n              // safeFlat(\r\n              //   profile.domains.map(domain =>\r\n              //     domain.competencies.map(competency => ({\r\n              //       ...competency,\r\n              //       domain: domain.title\r\n              //     }))\r\n              //   )\r\n              // )\r\n              profile\r\n          )\r\n        )\r\n      };\r\n\r\n      filteredCourses.push(modifiedCourse);\r\n    });\r\n    //console.log(filteredCourses);\r\n    return filteredCourses;\r\n  }\r\n\r\n  onFilter = filter => {\r\n    const { courses } = this.state;\r\n    let term;\r\n    try {\r\n      term = new RegExp(filter, 'i');\r\n    } catch (e) {\r\n      term = /./;\r\n    }\r\n    const filteredCourses = courses.filter(course => term.test(course.title));\r\n    this.setState({ filteredCourses, filter });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      filteredCourses,\r\n      framework,\r\n      filter,\r\n      loadingError,\r\n      version\r\n    } = this.state;\r\n\r\n    if (loadingError) {\r\n      return <ErrorLoading />;\r\n    }\r\n\r\n    //let unique = [...new Set(course.competencies.map(item => item.id))];\r\n\r\n    let duplicates = [];\r\n\r\n    const competencyList = competencies =>\r\n      competencies.map(competency => (\r\n        <li key={competency.id}>\r\n          <Link\r\n            to={`/framework/${framework}/${version}/competency/details/${\r\n              competency.competency_id\r\n            }`}\r\n          >\r\n            {competency.competency_label}\r\n          </Link>\r\n        </li>\r\n      ));\r\n\r\n    const resources = filteredCourses.map(course => (\r\n      <tr key={course.id}>\r\n        <td>\r\n          <Link to={`/training-resources/${course.id}`}>{course.title}</Link>\r\n        </td>\r\n        <td>{course.type}</td>\r\n        <td>\r\n          <ul>{competencyList(course.competencies)} </ul>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"search\"\r\n          // className=\"clearable\" // It doesn't work correctly\r\n          value={filter}\r\n          onChange={event => this.onFilter(event.target.value)}\r\n          placeholder=\"Filter resources\"\r\n        />\r\n        <table>\r\n          <tbody>{resources}</tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Courses;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport ErrorLoading from '../components/error-loading/ErrorLoading';\r\n\r\nimport DomainList from '../components/domain-list/DomainList';\r\nimport Courses from './courses/Courses';\r\nimport FrameworkVersions from '../containers/framework-versions/FrameworkVersions';\r\n\r\nimport CompetencyService from '../services/competency/competency';\r\nimport ActiveRequestsService from '../services/active-requests/active-requests';\r\nimport { safeFlat, removeHtmlTags } from '../services/util/util';\r\n\r\nclass CompetencyList extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      match: PropTypes.shape({ framework: PropTypes.string })\r\n    })\r\n  };\r\n\r\n  competencyService = new CompetencyService();\r\n  activeRequests = new ActiveRequestsService();\r\n\r\n  state = {\r\n    framework: '',\r\n    frameworkVersion: '',\r\n    frameworkName: '',\r\n    frameworkStatus: '',\r\n    frameworkDescription: '',\r\n    versions: [],\r\n    domains: [],\r\n    filter: '',\r\n    filteredDomains: [],\r\n    loadingError: false\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { framework, version: frameworkVersion } = props.match.params;\r\n    if (\r\n      framework !== state.framework ||\r\n      frameworkVersion !== state.frameworkVersion\r\n    ) {\r\n      return {\r\n        framework,\r\n        frameworkVersion,\r\n        domains: [],\r\n        loadingError: false\r\n      };\r\n    }\r\n\r\n    // No state update necessary\r\n    return null;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { framework, version: frameworkVersion } = this.props.match.params;\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await Promise.all([\r\n        this.fetchFramework(framework, frameworkVersion),\r\n        this.fetchVersions(framework)\r\n      ]);\r\n    } catch (error) {\r\n      this.setState({ loadingError: true });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const { framework, frameworkVersion, domains, loadingError } = this.state;\r\n    if (\r\n      framework !== prevState.framework ||\r\n      frameworkVersion !== prevState.frameworkVersion\r\n    ) {\r\n      if (domains.length === 0 && !loadingError) {\r\n        try {\r\n          this.activeRequests.startRequest();\r\n          await this.fetchFramework(framework, frameworkVersion);\r\n        } catch (error) {\r\n          this.setState({ loadingError: true });\r\n        } finally {\r\n          this.activeRequests.finishRequest();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchFramework(framework, frameworkVersion) {\r\n    window.scroll(0, 0);\r\n    const frameworkData = await this.competencyService.getVersionedFramework(\r\n      framework,\r\n      frameworkVersion\r\n    );\r\n    const domains = safeFlat(frameworkData.map(item => item.domains));\r\n    const frameworkDescription = removeHtmlTags(frameworkData[0].description);\r\n\r\n    this.setState({\r\n      frameworkName: frameworkData[0].title,\r\n      //frameworkStatus: frameworkData[0].status,\r\n      frameworkDescription,\r\n      domains,\r\n      filteredDomains: domains\r\n    });\r\n\r\n    const allFrameworks = await this.competencyService.getAllVersionedFrameworks();\r\n    const currentFramework = allFrameworks.filter(\r\n      fw => fw.title.toLowerCase() === framework\r\n    );\r\n    if (currentFramework.length > 0) {\r\n      const versionStatus = currentFramework[0].versions.filter(\r\n        vr => vr.number == frameworkVersion\r\n      );\r\n      this.setState({ frameworkStatus: versionStatus[0].status });\r\n    }\r\n  }\r\n\r\n  async fetchVersions(framework) {\r\n    const allFrameworks = await this.competencyService.getAllVersionedFrameworks();\r\n    const currentFramework = allFrameworks.filter(\r\n      fw => fw.title.toLowerCase() === framework\r\n    );\r\n    if (currentFramework.length > 0) {\r\n      this.setState({ versions: currentFramework[0].versions.reverse() });\r\n    }\r\n  }\r\n\r\n  onFilter = filter => {\r\n    const { domains } = this.state;\r\n    let term;\r\n    try {\r\n      term = new RegExp(filter, 'i');\r\n    } catch (e) {\r\n      term = /./;\r\n    }\r\n    const filteredDomains = domains.map(domain => {\r\n      const filteredCompetencies = domain.competencies.filter(competency =>\r\n        term.test(competency.title)\r\n      );\r\n      if (filteredCompetencies.length === 0) {\r\n        return null;\r\n      }\r\n      return { ...domain, competencies: filteredCompetencies };\r\n    });\r\n    this.setState({ filter, filteredDomains });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      framework,\r\n      frameworkVersion,\r\n      frameworkName,\r\n      frameworkStatus,\r\n      frameworkDescription,\r\n      filteredDomains,\r\n      versions,\r\n      filter,\r\n      loadingError\r\n    } = this.state;\r\n\r\n    /*if(versions.length > 0){\r\n console.log(this.state.versions[0].status);  \r\n}*/\r\n\r\n    if (loadingError) {\r\n      return <ErrorLoading />;\r\n    }\r\n\r\n    const domainList = filteredDomains.map(domain =>\r\n      domain === null ? null : (\r\n        <DomainList\r\n          key={domain.nid}\r\n          framework={framework}\r\n          domain={domain}\r\n          disable={true}\r\n          version={frameworkVersion}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <h3>{frameworkName}</h3>\r\n        <p>\r\n          <span className=\"tag\">{frameworkVersion}</span>\r\n          <span className=\"tag secondary-background\"> {frameworkStatus}</span>\r\n        </p>\r\n        <p>{frameworkDescription}</p>\r\n\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Competencies</Tab>\r\n            <Tab>Training resources</Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <input\r\n              // className=\"clearable\" // It doesn't work correctly\r\n              type=\"search\"\r\n              value={filter}\r\n              onChange={event => this.onFilter(event.target.value)}\r\n              placeholder=\"Filter competencies\"\r\n            />\r\n            <table>{domainList}</table>\r\n            <FrameworkVersions framework={framework} versions={versions} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Courses framework={framework} version={frameworkVersion} />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompetencyList;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport CKEditor from 'react-ckeditor-component';\r\n\r\nimport { apiUrl } from '../services/http/http';\r\n\r\nclass ResourceEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      csrf: '',\r\n      updateFlag: false,\r\n      path: this.props.location.pathname.split('/'),\r\n      nid: '',\r\n      title: '',\r\n      dates: '',\r\n      dates2: '',\r\n      type: '',\r\n      description: '',\r\n      location: '',\r\n      url: '',\r\n      target_audience: '',\r\n      learning_outcomes: '',\r\n      keywords: '',\r\n      organisers: '',\r\n      trainers: ''\r\n    };\r\n  }\r\n\r\n  changeDescription(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ description: newContent });\r\n  }\r\n\r\n  changeTargetAudience(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ target_audience: newContent });\r\n  }\r\n\r\n  changeLearningOutcomes(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ learning_outcomes: newContent });\r\n  }\r\n\r\n  changeOrganisers(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ organisers: newContent });\r\n  }\r\n\r\n  changeTrainers(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ trainers: newContent });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ nid: this.state.path[3] });\r\n\r\n    let csrfURL = `${apiUrl}/rest/session/token`;\r\n    fetch(csrfURL)\r\n      .then(Response => Response)\r\n      .then(findresponse2 => {\r\n        this.setState({ csrf: findresponse2 });\r\n      });\r\n\r\n    //let fetchResource = \"http://dev-competency-mapper.pantheonsite.io/api/v1/training-resources/\"+nid+\"?_format=json\";\r\n    //let fetchResource = `${apiUrl}/api/v1/training-resources/all?_format=json`;\r\n    let fetchResource = `${apiUrl}/api/resources?_format=json&timestamp=${Date.now()}`;\r\n    fetch(fetchResource)\r\n      .then(Response => Response.json())\r\n      .then(findresponse => {\r\n        this.setState({\r\n          data: findresponse\r\n        });\r\n      });\r\n  }\r\n  checkUser() {\r\n    if (!localStorage.getItem('roles')) {\r\n      this.props.history.push('/');\r\n    } else if (!localStorage.getItem('roles').includes('content_manager')) {\r\n      alert(\r\n        'You are not authorised to access this page. Contact the administrator'\r\n      );\r\n      this.props.history.push('/');\r\n    }\r\n    console.log(localStorage.getItem('roles'));\r\n  }\r\n\r\n  render() {\r\n    this.checkUser();\r\n    let nid = '';\r\n    let title = '';\r\n    let dates = '';\r\n    let dates2 = '';\r\n    let type = '';\r\n    let description = '';\r\n    let location = '';\r\n    let url = '';\r\n    let target_audience = '';\r\n    let learning_outcomes = '';\r\n    let keywords = '';\r\n    let organisers = '';\r\n    let trainers = '';\r\n\r\n    this.state.data.forEach(item => {\r\n      if (item.id === this.state.nid) {\r\n        nid = item.id;\r\n        title = item.title;\r\n        //temp_date = item.dates.split(\"-\");\r\n        dates = item.start_date;\r\n        dates2 = item.end_date;\r\n        type = item.type;\r\n        description = item.description;\r\n        location = item.location;\r\n        url = item.url;\r\n        target_audience = item.target_audience;\r\n        learning_outcomes = item.learning_outcomes;\r\n        keywords = item.keywords;\r\n        organisers = item.organisers;\r\n        trainers = item.trainers;\r\n      }\r\n    });\r\n    if (this.state.data.length > 0) {\r\n      console.log(title);\r\n      return (\r\n        <EditForm\r\n          nid={nid}\r\n          title={title}\r\n          dates={dates}\r\n          dates2={dates2}\r\n          type={type}\r\n          description={description}\r\n          location={location}\r\n          url={url}\r\n          target_audience={target_audience}\r\n          learning_outcomes={learning_outcomes}\r\n          keywords={keywords}\r\n          organisers={organisers}\r\n          trainers={trainers}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nclass EditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nid: this.props.nid,\r\n      title: this.props.title,\r\n      dates: this.props.dates,\r\n      dates2: this.props.dates2,\r\n      type: this.props.type,\r\n      description: this.props.description,\r\n      location: this.props.location,\r\n      url: this.props.url,\r\n      target_audience: this.props.target_audience,\r\n      learning_outcomes: this.props.learning_outcomes,\r\n      keywords: this.props.keywords,\r\n      organisers: this.props.organisers,\r\n      trainers: this.props.trainers,\r\n      redirect: false,\r\n      updateFlag: false,\r\n      csrf: ''\r\n    };\r\n    this.handleTitle = this.handleTitle.bind(this);\r\n    this.handleDates = this.handleDates.bind(this);\r\n    this.handleDates2 = this.handleDates2.bind(this);\r\n    this.handleType = this.handleType.bind(this);\r\n    this.handleDesc = this.handleDesc.bind(this);\r\n    this.handleLocation = this.handleLocation.bind(this);\r\n    this.handleURL = this.handleURL.bind(this);\r\n    this.handleTargetAudience = this.handleTargetAudience.bind(this);\r\n    this.handleLearningOutcomes = this.handleLearningOutcomes.bind(this);\r\n    this.handleKeywords = this.handleKeywords.bind(this);\r\n    this.handleOrganisers = this.handleOrganisers.bind(this);\r\n    this.handleTrainers = this.handleTrainers.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let csrfURL = `${apiUrl}/rest/session/token`;\r\n    fetch(csrfURL)\r\n      .then(Response => Response)\r\n      .then(findresponse2 => {\r\n        this.setState({ csrf: findresponse2 });\r\n      });\r\n  }\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object\r\n  };\r\n\r\n  handleTitle(event) {\r\n    this.setState({ title: event.value });\r\n  }\r\n\r\n  handleDates(event) {\r\n    this.setState({ dates: event.value });\r\n  }\r\n\r\n  handleDates2(event) {\r\n    this.setState({ dates2: event.value });\r\n  }\r\n\r\n  handleType(event) {\r\n    this.setState({ type: event.value });\r\n  }\r\n\r\n  handleDesc(event) {\r\n    this.setState({ description: event.editor.getData() });\r\n  }\r\n  handleLocation(event) {\r\n    this.setState({ location: event.value });\r\n  }\r\n  handleURL(event) {\r\n    this.setState({ url: event.value });\r\n  }\r\n\r\n  handleTargetAudience(event) {\r\n    this.setState({ target_audience: event.editor.getData() });\r\n  }\r\n\r\n  handleLearningOutcomes(event) {\r\n    this.setState({ learning_outcomes: event.editor.getData() });\r\n  }\r\n\r\n  handleKeywords(event) {\r\n    this.setState({ keywords: event.value });\r\n  }\r\n\r\n  handleOrganisers(event) {\r\n    this.setState({ organisers: event.editor.getData() });\r\n  }\r\n\r\n  handleTrainers(event) {\r\n    this.setState({ trainers: event.editor.getData() });\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.props.history.push('all-training-resources');\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.updateFlag) {\r\n      setTimeout(() => {\r\n        this.context.router.history.push(\r\n          '/training-resources/' + this.state.nid\r\n        );\r\n      }, 1000);\r\n\r\n      console.log('componentDidUpdate');\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    let nid = this.state.nid;\r\n    let title = this.refs.title.value;\r\n    let dates = this.refs.dates.value;\r\n    let dates2 = this.refs.dates2.value;\r\n    let type = this.refs.type.value;\r\n    let description = this.state.description;\r\n    let location = this.refs.location.value;\r\n    let url = this.refs.url.value;\r\n    let target_audience = this.state.target_audience;\r\n    let learning_outcomes = this.state.learning_outcomes;\r\n    let organisers = this.state.organisers;\r\n    let trainers = this.state.trainers;\r\n    let keywords = this.refs.keywords.value;\r\n    let csrf = localStorage.getItem('csrf_token');\r\n\r\n    fetch(`${apiUrl}/node/` + nid + '?_format=hal_json', {\r\n      method: 'PATCH',\r\n      cookies: 'x-access-token',\r\n      headers: {\r\n        Accept: 'application/hal+json',\r\n        'Content-Type': 'application/hal+json',\r\n        'X-CSRF-Token': csrf, //'yoM7eSiML2AI6A3FGH2EKCaX_agiJfmYkRIPL0MdPlI',\r\n        Authorization: 'Basic'\r\n      },\r\n      body: JSON.stringify({\r\n        _links: {\r\n          type: {\r\n            href: `${apiUrl}/rest/type/node/training_resource`\r\n          }\r\n        },\r\n        title: [\r\n          {\r\n            value: title\r\n          }\r\n        ],\r\n        field_dates: [\r\n          {\r\n            value: dates\r\n          }\r\n        ],\r\n        field_end_date: [\r\n          {\r\n            value: dates2\r\n          }\r\n        ],\r\n        field_type: [\r\n          {\r\n            value: type\r\n          }\r\n        ],\r\n        field_description: [\r\n          {\r\n            value: description,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_location: [\r\n          {\r\n            value: location\r\n          }\r\n        ],\r\n        field_url: [\r\n          {\r\n            value: url\r\n          }\r\n        ],\r\n        field_target_audience: [\r\n          {\r\n            value: target_audience,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_learning_outcomes: [\r\n          {\r\n            value: learning_outcomes,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_keywords: [\r\n          {\r\n            value: keywords\r\n          }\r\n        ],\r\n        field_organisers: [\r\n          {\r\n            value: organisers,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_trainers: [\r\n          {\r\n            value: trainers,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        type: [\r\n          {\r\n            target_id: 'training_resource'\r\n          }\r\n        ]\r\n      })\r\n    });\r\n\r\n    //event.target.reset();\r\n\r\n    event.preventDefault();\r\n    this.setState({ updateFlag: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Edit Training Resources</h2>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"column large-12 callout\">\r\n            <form\r\n              className=\"form\"\r\n              id={'resource_edit_form'}\r\n              onSubmit={this.handleSubmit.bind(this)}\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Title</strong>\r\n                  <input\r\n                    type=\"text\"\r\n                    ref=\"title\"\r\n                    id={'title'}\r\n                    value={this.state.title}\r\n                    onChange={this.handleTitle.bind(this)}\r\n                    required\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-6\">\r\n                  <strong>Dates</strong>\r\n                  <input\r\n                    type=\"date\"\r\n                    ref=\"dates\"\r\n                    value={this.state.dates}\r\n                    onChange={this.handleDates.bind(this)}\r\n                    placeholder=\"Date\"\r\n                  />\r\n                </div>\r\n                <div className=\"column large-6\">\r\n                  <strong>Dates</strong>\r\n                  <input\r\n                    type=\"date\"\r\n                    ref=\"dates2\"\r\n                    value={this.state.dates2}\r\n                    onChange={this.handleDates2.bind(this)}\r\n                    placeholder=\"Date\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Event type</strong>\r\n                  <select\r\n                    ref={'type'}\r\n                    value={this.state.type}\r\n                    onChange={this.handleType.bind(this)}\r\n                  >\r\n                    <option value={'Online'}>Online</option>\r\n                    <option value={'Face-to-Face'}>Face-to-Face</option>\r\n                    <option value={'Webinar'}>Webinar</option>\r\n                    <option value={'Hackathon'}>Hackathon</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Description</strong>\r\n                  <CKEditor\r\n                    content={this.state.description}\r\n                    events={{\r\n                      change: this.handleDesc\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                    required\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"description\" value={this.state.description} onChange={this.handleDesc.bind(this)} required placeholder=\"Description\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Location</strong>\r\n                  <input\r\n                    type=\"text\"\r\n                    ref=\"location\"\r\n                    value={this.state.location}\r\n                    onChange={this.handleLocation.bind(this)}\r\n                    placeholder=\"Location\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>URL</strong>\r\n                  <input\r\n                    type=\"text\"\r\n                    ref=\"url\"\r\n                    value={this.state.url}\r\n                    onChange={this.handleURL.bind(this)}\r\n                    required\r\n                    placeholder=\"URL\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Target audience</strong>\r\n                  <CKEditor\r\n                    content={this.state.target_audience}\r\n                    events={{\r\n                      change: this.handleTargetAudience\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"target_audience\" value={this.state.target_audience} onChange={this.handleTargetAudience.bind(this)} required placeholder=\"Target audience\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Learning outcomes</strong>\r\n                  <CKEditor\r\n                    content={this.state.learning_outcomes}\r\n                    events={{\r\n                      change: this.handleLearningOutcomes\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"learning_outcomes\" value={this.state.learning_outcomes} onChange={this.handleLearningOutcomes.bind(this)} required placeholder=\"Learning outcomes\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Organisers</strong>\r\n                  <CKEditor\r\n                    content={this.state.organisers}\r\n                    events={{\r\n                      change: this.handleOrganisers\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"organisers\" value={this.state.organisers} onChange={this.handleOrganisers.bind(this)} required placeholder=\"Organisers\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Trainers</strong>\r\n                  <CKEditor\r\n                    content={this.state.trainers}\r\n                    events={{\r\n                      change: this.handleTrainers\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"trainers\" value={this.state.trainers} onChange={this.handleTrainers.bind(this)} required placeholder=\"Trainers\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Keywords</strong>\r\n                  <input\r\n                    type=\"text\"\r\n                    ref=\"keywords\"\r\n                    value={this.state.keywords}\r\n                    onChange={this.handleKeywords.bind(this)}\r\n                    placeholder=\"Keywords\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-2\">\r\n                  <input type=\"submit\" className=\"button\" value=\"Update\" />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst EditResources = () => (\r\n  <Switch>\r\n    <Route exact path=\"/training-resource/edit/:nid\" component={ResourceEdit} />\r\n  </Switch>\r\n);\r\n\r\nexport default EditResources;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport Dropzone from 'react-dropzone'\n\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t\t<Dropzone onDrop={acceptedFiles => \n\t\t\t\t\t{console.log(acceptedFiles)\n\t\t\t\t\t\tconst reader = new FileReader()\n\n\t\t\t\t\t    reader.onabort = () => console.log('file reading was aborted')\n\t\t\t\t\t    reader.onerror = () => console.log('file reading has failed')\n\t\t\t\t\t    reader.onload = () => {\n\t\t\t\t\t      // Do whatever you want with the file contents\n\t\t\t\t\t      const binaryStr = reader.result\n\t\t\t\t\t      console.log(binaryStr)\n\t\t\t\t\t    }\n\t\t\t\t\tdocument.getElementById(\"fileupload\").append(acceptedFiles[0].name)\n\t\t\t\t\tacceptedFiles.forEach(file => reader.readAsArrayBuffer(file))}\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t  {({getRootProps, getInputProps}) => (\n\t\t\t\t    <section>\n\t\t\t\t      <div {...getRootProps()}>\n\t\t\t\t        <input {...getInputProps()} />\n\t\t\t\t        <a href=\"#\">Click to select files</a>\n\t\t\t\t      </div>\n\t\t\t\t    </section>\n\t\t\t\t  )}\n\t\t\t\t</Dropzone>\n\t\t\t)\n\t}\n}\n\nexport default FileUpload;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport CKEditor from 'react-ckeditor-component';\r\nimport FileUpload from './FileUpload';\r\nimport { apiUrl } from '../services/http/http';\r\n\r\nclass ResourceCreate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.onChange = this.onChange.bind(this);\r\n    this.changeDescription = this.changeDescription.bind(this);\r\n    this.changeTargetAudience = this.changeTargetAudience.bind(this);\r\n    this.changeLearningOutcomes = this.changeLearningOutcomes.bind(this);\r\n    this.changeOrganisers = this.changeOrganisers.bind(this);\r\n    this.changeTrainers = this.changeTrainers.bind(this);\r\n\r\n    this.state = {\r\n      data: [],\r\n      csrf: '',\r\n      updateFlag: false,\r\n      content: 'content',\r\n      description: '',\r\n      target_audience: '',\r\n      learning_outcomes: '',\r\n      organisers: '',\r\n      trainers: ''\r\n    };\r\n  }\r\n\r\n  changeDescription(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ description: newContent });\r\n  }\r\n\r\n  changeTargetAudience(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ target_audience: newContent });\r\n  }\r\n\r\n  changeLearningOutcomes(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ learning_outcomes: newContent });\r\n  }\r\n\r\n  changeOrganisers(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ organisers: newContent });\r\n  }\r\n\r\n  changeTrainers(evt) {\r\n    let newContent = evt.editor.getData();\r\n    this.setState({ trainers: newContent });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.updateFlag) {\r\n      setTimeout(() => {\r\n        this.props.history.push('/all-training-resources');\r\n        //this.setState({'updateFlag': false});\r\n      }, 1000);\r\n\r\n      console.log('componentDidUpdate');\r\n    }\r\n  }\r\n\r\n  checkUser() {\r\n    if (!localStorage.getItem('roles')) {\r\n      this.props.history.push('/');\r\n    } else if (!localStorage.getItem('roles').includes('content_manager')) {\r\n      alert(\r\n        'You are not authorised to access this page. Contact the administrator'\r\n      );\r\n      this.props.history.push('/');\r\n    }\r\n    console.log(localStorage.getItem('roles'));\r\n  }\r\n\r\n  componentDidMount() {\r\n    let csrfURL = `${apiUrl}/rest/session/token`;\r\n    fetch(csrfURL)\r\n      .then(Response => Response)\r\n      .then(findresponse2 => {\r\n        this.setState({ csrf: findresponse2 });\r\n      });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    let title = this.refs.title.value;\r\n    let dates = this.refs.dates.value;\r\n    let dates2 = this.refs.dates2.value;\r\n    let type = 'Online';\r\n    if (this.refs.type.value) {\r\n      type = this.refs.type.value;\r\n    }\r\n\r\n    let description = this.state.description;\r\n    let location = this.refs.location.value;\r\n    let url = this.refs.url.value;\r\n    let target_audience = this.state.target_audience;\r\n    let learning_outcomes = this.state.learning_outcomes;\r\n    let keywords = this.refs.keywords.value;\r\n    let organisers = this.state.organisers;\r\n    let trainers = this.state.trainers;\r\n\r\n    let token = localStorage.getItem('csrf_token');\r\n\r\n    //alert(learning_outcomes);\r\n\r\n    fetch(`${apiUrl}/node?_format=hal_json`, {\r\n      credentials: 'include',\r\n      method: 'POST',\r\n      cookies: 'x-access-token',\r\n      headers: {\r\n        Accept: 'application/hal+json',\r\n        'Content-Type': 'application/hal+json',\r\n        'X-CSRF-Token': token,\r\n        Authorization: 'Basic'\r\n      },\r\n      body: JSON.stringify({\r\n        _links: {\r\n          type: {\r\n            href: `${apiUrl}/rest/type/node/training_resource`\r\n          }\r\n        },\r\n        title: [\r\n          {\r\n            value: title\r\n          }\r\n        ],\r\n        field_dates: [\r\n          {\r\n            value: dates\r\n          }\r\n        ],\r\n        field_end_date: [\r\n          {\r\n            value: dates2\r\n          }\r\n        ],\r\n        field_type: [\r\n          {\r\n            value: type\r\n          }\r\n        ],\r\n        field_description: [\r\n          {\r\n            value: description,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_location: [\r\n          {\r\n            value: location\r\n          }\r\n        ],\r\n        field_url: [\r\n          {\r\n            value: url\r\n          }\r\n        ],\r\n        field_target_audience: [\r\n          {\r\n            value: target_audience,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_learning_outcomes: [\r\n          {\r\n            value: learning_outcomes,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_keywords: [\r\n          {\r\n            value: keywords\r\n          }\r\n        ],\r\n        field_organisers: [\r\n          {\r\n            value: organisers,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n        field_trainers: [\r\n          {\r\n            value: trainers,\r\n            format: 'basic_html'\r\n          }\r\n        ],\r\n\r\n        type: [\r\n          {\r\n            target_id: 'training_resource'\r\n          }\r\n        ]\r\n      })\r\n    });\r\n\r\n    event.target.reset();\r\n    this.setState({ updateFlag: true });\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    this.checkUser();\r\n    return (\r\n      <div>\r\n        <h2>Create Training Resources</h2>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"column large-12 callout\">\r\n            <h4>Create new competency</h4>\r\n            <form\r\n              className=\"form\"\r\n              id={'resource_create_form'}\r\n              onSubmit={this.handleSubmit.bind(this)}\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Title</strong>\r\n                  <input type=\"text\" ref=\"title\" required placeholder=\"Title\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-6\">\r\n                  <strong>Start Date</strong>\r\n                  <input type=\"date\" ref=\"dates\" placeholder=\"Date\" />\r\n                </div>\r\n                <div className=\"column large-6\">\r\n                  <strong>End Date</strong>\r\n                  <input type=\"date\" ref=\"dates2\" placeholder=\"Date\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Event type</strong>\r\n                  <select ref={'type'}>\r\n                    <option value={'Online'}>Online</option>\r\n                    <option value={'Face-to-Face'}>Face-to-Face</option>\r\n                    <option value={'Webinar'}>Webinar</option>\r\n                    <option value={'Hackathon'}>Hackathon</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Description</strong>\r\n                  <CKEditor\r\n                    content={this.state.description}\r\n                    events={{\r\n                      change: this.changeDescription\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                    required\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"description\" required placeholder=\"Description\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Location</strong>\r\n                  <input type=\"text\" ref=\"location\" placeholder=\"Location\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>URL</strong>\r\n                  <input type=\"text\" ref=\"url\" required placeholder=\"URL\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Target audience</strong>\r\n                  <CKEditor\r\n                    content={this.state.target_audience}\r\n                    events={{\r\n                      change: this.changeTargetAudience\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n                  {/*<input type=\"text\" ref=\"target_audience\" required placeholder=\"Target audience\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Learning outcomes</strong>\r\n                  <CKEditor\r\n                    content={this.state.learning_outcomes}\r\n                    events={{\r\n                      change: this.changeLearningOutcomes\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"learning_outcomes\" required placeholder=\"Learning outcomes\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Organisers</strong>\r\n                  <CKEditor\r\n                    content={this.state.organisers}\r\n                    events={{\r\n                      change: this.changeOrganisers\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n\r\n                  {/*<textarea rows={\"5\"} ref=\"organisers\" required placeholder=\"Organisers\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Trainers</strong>\r\n                  <CKEditor\r\n                    content={this.state.trainers}\r\n                    events={{\r\n                      change: this.changeTrainers\r\n                    }}\r\n                    activeClass=\"p10\"\r\n                  />\r\n                  {/*<textarea rows={\"5\"} ref=\"trainers\" required placeholder=\"Trainers\"/>*/}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>Keywords</strong>\r\n                  <input type=\"text\" ref=\"keywords\" placeholder=\"Keywords\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div id=\"fileupload\" className=\"row\">\r\n                <div className=\"column large-12\">\r\n                  <strong>File upload</strong>\r\n                  <FileUpload />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"column large-2\">\r\n                  <input type=\"submit\" className=\"button\" value=\"Submit\" />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst CreateResources = () => (\r\n  <Switch>\r\n    <Route exact path=\"/training-resource/create\" component={ResourceCreate} />\r\n  </Switch>\r\n);\r\n\r\nexport default CreateResources;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { apiUrl } from '../services/http/http';\r\nimport ActiveRequestsService from '../services/active-requests/active-requests';\r\nimport CompetencyService from '../services/competency/competency';\r\n\r\nconst $ = window.$;\r\n\r\nclass AttributeMap extends React.Component {\r\n  activeRequests = new ActiveRequestsService();\r\n    competencyService = new CompetencyService();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      //framework: this.props.selectedFramework,\r\n      //resourceID: this.props.resourceID,\r\n      framework: this.props.location.pathname.split('/')[4],\r\n      resourceID: this.props.location.pathname.split('/')[2],\r\n      frameworkdetails: [],\r\n      csrf: '',\r\n      frameworkUUID: '',\r\n      competencies: [],\r\n      //attributes: this.props.selectedAttributes,\r\n      //selectedAttributes: this.props.selectedAttributes,\r\n      selectedAttributes: [],\r\n      //selectedCompetencies: this.props.selectedCompetencies,\r\n      resourceDetails: '',\r\n      resourcePath: this.props.location.pathname.split('/')\r\n    };\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    //this.loadSelectedAttributes = this.loadSelectedAttributes.bind(this);\r\n  }\r\n\r\n  async handleSelect() {\r\n    let checkedAttributes = this.state.selectedAttributes;\r\n    let attributeIDs = [];\r\n    let token = localStorage.getItem('csrf_token');\r\n    for (let i = 0; i < checkedAttributes.length; i++) {\r\n      attributeIDs.push(checkedAttributes[i].split('id', 2));\r\n    }\r\n\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      await Promise.all([\r\n        this.competencyService.attrmap(this.state.resourceID, attributeIDs)\r\n      ]);\r\n    } catch (error) {\r\n      this.setState({ loadingError: true });\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n      this.props.history.push(\"/training-resources/1034\");\r\n    }\r\n  }\r\n\r\n  handleAllCheck(id, uuid, e) {\r\n    const selectedAttributes = this.state.selectedAttributes;\r\n    let childItems = document.getElementsByName(id);\r\n    if (e.target.checked) {\r\n      for (let i = 0; i < childItems.length; i++) {\r\n        childItems[i].checked = true;\r\n        selectedAttributes.push(\r\n          // childItems[i].getAttribute('data-uuid') +\r\n          //   'id' +\r\n            childItems[i].getAttribute('data-id')\r\n        );\r\n        this.setState({ selectedAttributes });\r\n        //console.log(this.state.selectedAttributes);\r\n      }\r\n    } else {\r\n      for (let i = 0; i < childItems.length; i++) {\r\n        if (childItems[i].checked === true) {\r\n          childItems[i].checked = false;\r\n          //selectedAttributes.pop(childItems[i].getAttribute('data-id'));\r\n          //let index = array.indexOf(element);\r\n          selectedAttributes.splice(\r\n            selectedAttributes.indexOf(childItems[i]),\r\n            1\r\n          );\r\n          this.setState({ selectedAttributes });\r\n          //console.log(this.state.selectedAttributes);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleAttributeClick(id, uuid, e) {\r\n    let selectedAttributes = this.state.selectedAttributes;\r\n    //let selectedAttributes = \r\n    let isChecked = e.target.checked;\r\n    if (isChecked) {\r\n      //selectedAttributes.push(uuid + 'id' + id);\r\n      selectedAttributes.push(id);\r\n      this.setState({ selectedAttributes });\r\n      document.getElementById(e.target.name).checked = true;\r\n      console.log(selectedAttributes);\r\n    } else {\r\n      //selectedAttributes.pop(id);\r\n      selectedAttributes.splice(\r\n        selectedAttributes.indexOf(id),\r\n        1\r\n      );\r\n      this.setState({ selectedAttributes });\r\n      if (!$(':checkbox[name=' + e.target.name + ']').is(':checked')) {\r\n        document.getElementById(e.target.name).checked = false;\r\n        //console.log(this.state.selectedAttributes);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleListAllChecked(e) {\r\n    let lists = [];\r\n    $(':checkbox').each(function() {\r\n      if ($(this).is(':checked')) {\r\n        lists.push($(this).attr('id'));\r\n      }\r\n    });\r\n    alert(lists);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch(\r\n      `${apiUrl}` +\r\n        '/api/resources/?_format=hal_json&id=' +\r\n        this.state.resourceID+'&timestamp='+Date.now()\r\n    )\r\n      .then(Response => Response.json())\r\n      .then(findresponse => {\r\n        this.setState({\r\n          resourceDetails: findresponse\r\n        });\r\n      });\r\n\r\n    console.log(this.state.resourceDetails); \r\n\r\n    let selectedAttributes = []; \r\n    this.state.resourceDetails.competency_profile.map(profile=>{\r\n      //if(profile.title.toLowerCase() == this.state.framewor  k){\r\n        profile.domains.map(domain=>{\r\n          domain.competencies.map(competency=>{\r\n            competency.attributes.map(attribute=>{ \r\n            selectedAttributes.push(attribute.id)\r\n            \r\n            })\r\n          })\r\n        })\r\n      //}\r\n    });\r\n\r\n    this.setState({selectedAttributes: selectedAttributes});\r\n\r\n    //console.log(this.state.framework);\r\n    let csrfURL = `${apiUrl}/rest/session/token`;\r\n    fetch(csrfURL)\r\n      .then(Response => Response)\r\n      .then(findresponse2 => {\r\n        this.setState({ csrf: findresponse2 });\r\n      });\r\n\r\n    let fetchFrameworkDetails = `${apiUrl}/api/version_manager?_format=json&timestamp=${Date.now()}`;\r\n    await fetch(fetchFrameworkDetails)\r\n      .then(Response => Response.json())\r\n      .then(findresponse1 => {\r\n        this.setState({\r\n          frameworkdetails: findresponse1\r\n        });\r\n      });\r\n\r\n    let latest_version = '';\r\n\r\n    this.state.frameworkdetails.map(detail=>{\r\n      if(detail.title.toLowerCase() == this.state.framework){\r\n      \r\n      detail.versions.map(version=>{\r\n        if(version.status == \"live\"){\r\n          latest_version = version.number;\r\n        }\r\n      })\r\n    }\r\n    });\r\n\r\n    let fetchCompetencyList =\r\n      `${apiUrl}` + '/api/' + this.state.framework + '/'+ latest_version+'?_format=json';\r\n      console.log(fetchCompetencyList);\r\n    await fetch(fetchCompetencyList)\r\n      .then(Response => Response.json())\r\n      .then(findresponse => {\r\n        this.setState({\r\n          data: findresponse\r\n        });\r\n      });\r\n\r\n    \r\n\r\n    //this.loadSelectedAttributes();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.state.attributes === nextState.attributes;\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.state.data);\r\n    let frameworkDetails = this.state.frameworkdetails;\r\n    let data = this.state.data;\r\n    let frameworkDefs = [];\r\n    let domainsOptions = [];\r\n    let attributeTypeOptions = [];\r\n    let resDetails = this.state.resourceDetails;\r\n    //let resDetails = this.state.resourceDetails;\r\n    let selectedAttributesArray = [];\r\n    let selectedCompetenciesArray = [];\r\n    if (resDetails) {\r\n      resDetails.competency_profile.map(profile => {\r\n        profile.domains.map(domain => {\r\n          domain.competencies.map(competency => {\r\n            selectedCompetenciesArray.push(competency.id);\r\n            competency.attributes.map(attribute => {\r\n              selectedAttributesArray.push(attribute.id);\r\n            });\r\n          });\r\n        });\r\n      });\r\n\r\n      //console.log(selectedAttributesArray);\r\n    }\r\n    //this.loadSelectedAttributes();\r\n\r\n    frameworkDetails.forEach((item, ikey) => {\r\n      if (item.title.toLowerCase() === this.state.framework) {\r\n        //this.state.frameworkUUID = item.uuid;\r\n        item.attribute_types.forEach(attribute_type => {\r\n          frameworkDefs.push(attribute_type.title);\r\n          attributeTypeOptions.push(\r\n            <option data-id={attribute_type.id} value={attribute_type.uuid}>\r\n              {attribute_type.title}\r\n            </option>\r\n          );\r\n        });\r\n        item.domains.forEach(domain => {\r\n          domainsOptions.push(\r\n            <option data-id={domain.id} value={domain.uuid}>\r\n              {domain.title}\r\n            </option>\r\n          );\r\n        });\r\n      }\r\n    });\r\n\r\n    // console.log(data);\r\n\r\n    const ListOfCompetencies = data.map(item =>\r\n      item.domains.map((domain, did) => (\r\n        <tbody>\r\n          <tr key={domain.nid}>\r\n            <td>{did + 1}</td>{' '}\r\n            <td>\r\n              <strong> {domain.title}</strong>{' '}\r\n            </td>{' '}\r\n          </tr>\r\n          {domain.competencies.map((competency, cid) => (\r\n            <tr key={competency.id}>\r\n              <td>\r\n                {did + 1}.{cid + 1}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type={'checkbox'}\r\n                  defaultChecked={\r\n                    -1 !== selectedCompetenciesArray.indexOf(competency.id)\r\n                  }\r\n                  data-test={competency.uuid}\r\n                  id={competency.id}\r\n                  onChange={this.handleAllCheck.bind(\r\n                    this,\r\n                    competency.id,\r\n                    competency.uuid\r\n                  )}\r\n                />{' '}\r\n                {competency.title}\r\n                <ul style={{ marginLeft: 1 + 'em', marginBottom: 1 + 'em' }}>\r\n                  {frameworkDefs.map(def => {\r\n                    return (\r\n                      <div style={{ marginLeft: 1 + 'em' }}>\r\n                        <div>\r\n                          {' '}\r\n                          <strong>\r\n                            <em>{def}</em>\r\n                          </strong>\r\n                        </div>\r\n                        {competency.attributes\r\n                          .filter(attribute => attribute.type === def)\r\n                          .map(attribute => {\r\n                            return (\r\n                              <li\r\n                                key={attribute.id}\r\n                                style={{ marginLeft: 1 + 'em' }}\r\n                              >\r\n                                <input\r\n                                  type={'checkbox'}\r\n                                  defaultChecked={\r\n                                    -1 !==\r\n                                    selectedAttributesArray.indexOf(\r\n                                      //attribute.uuid + 'id' + attribute.id\r\n                                      attribute.id\r\n                                    )\r\n                                  }\r\n                                  name={competency.id}\r\n                                  data-id={attribute.id}\r\n                                  data-uuid={attribute.uuid}\r\n                                  id={attribute.id}\r\n                                  onChange={this.handleAttributeClick.bind(\r\n                                    this,\r\n                                    attribute.id,\r\n                                    attribute.uuid\r\n                                  )}\r\n                                />{' '}\r\n                                <span className={attribute.archived}>\r\n                                  {' '}\r\n                                  {attribute.title}\r\n                                </span>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td>\r\n              <td />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      ))\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h2>{resDetails.title}</h2>\r\n        <h4>Type: {resDetails.type}</h4>\r\n        <h4>URL: {resDetails.url}</h4>\r\n        <table className={'table'}>{ListOfCompetencies}</table>\r\n        <div id={'footer-button'}>\r\n          <button className={'button'} onClick={this.handleSelect.bind(this)}>\r\n            {' '}\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst AttrMap = () => (\r\n  <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/training-resources/:id/map/:framework\"\r\n      component={AttributeMap}\r\n    />\r\n  </Switch>\r\n);\r\n\r\nexport default AttrMap;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n\nclass ItemVersions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalIsOpen: false\n    };\n\n\n\n    this.openModal = this.openModal.bind(this);\n    // this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n\n  // afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   this.subtitle.style.color = '#f00';\n  // }\n\n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n\n  render() {\n    return (\n      <span>\n        <button onClick={this.openModal}> <i className={\"fa fa-question-circle\"}></i> </button>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n\n          <button className={\"float-right\"} onClick={this.closeModal}><i className={\"fa fa-window-close\"}></i></button>\n          <p></p>\n          <div className={\"callout\"}>\n            This item is deprecated in the latest version of this framework. Please see the  \n\n             <Link to={`/framework/${this.props.framework.toLowerCase()}/${this.props.version}`}> release notes</Link>\n          </div>\n          \n        </Modal>\n      </span>\n    );\n  }\n}\n\nexport default ItemVersions;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport ReactModal from 'react-modal';\r\nimport AttributeMap from './AttributeMap';\r\nimport Parser from 'html-react-parser';\r\nimport ItemVersions from '../containers/framework-versions/VersionNotice';\r\nimport { apiUrl } from '../services/http/http';\r\n\r\nclass ResourceDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resource: [],\r\n      frameworks: [],\r\n      resourcePath: this.props.location.pathname.split('/'),\r\n      showModal: false,\r\n      selectedFramework: '',\r\n      updateFlag: ''\r\n    };\r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n\r\n  handleOpenModal(event, temp) {\r\n    this.setState({ showModal: true });\r\n    this.setState({ selectedFramework: event });\r\n    temp.preventDefault();\r\n    //console.log(event);\r\n  }\r\n\r\n  handleCloseModal() {\r\n    this.setState({ showModal: false });\r\n    this.setState({ updateFlag: true });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.updateFlag) {\r\n      this.fetchData();\r\n      setTimeout(() => {\r\n        this.setState({ updateFlag: false });\r\n      }, 1000);\r\n      console.log('componentDidUpdate');\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    let csrfURL = `${apiUrl}/rest/session/token`;\r\n    fetch(csrfURL)\r\n      .then(Response => Response)\r\n      .then(findresponse2 => {\r\n        this.setState({ csrf: findresponse2 });\r\n      });\r\n\r\n    //&timestamp=${Date.now()}\r\n\r\n    /*let resourcesURL = `${apiUrl}/api/v1/training-resources/all?_format=hal_json`;*/\r\n    let resourcesURL = `${apiUrl}/api/resources/?_format=json&id=${\r\n      this.state.resourcePath[2]\r\n    }&timestamp=${Date.now()}`;\r\n    console.log(resourcesURL);\r\n    fetch(resourcesURL)\r\n      .then(Response => Response.json())\r\n      .then(findresponse3 => {\r\n        this.setState({ resource: findresponse3 });\r\n      });\r\n\r\n    //fetch(`${apiUrl}/api/v1/framework?_format=json`)\r\n    fetch(`${apiUrl}/api/version_manager?_format=json`)\r\n      .then(Response => Response.json())\r\n      .then(findresponse => {\r\n        this.setState({\r\n          frameworks: findresponse\r\n        });\r\n      });\r\n  }\r\n\r\n  mappingBlock() {\r\n    if (localStorage.getItem('roles')) {\r\n      if (localStorage.getItem('roles').includes('content_manager')) {\r\n        return (\r\n          <div className={'callout white-color industry-background'}>\r\n            <strong> Manage competency profile </strong>\r\n            <ul>\r\n              {this.state.frameworks.map((item, id) => {\r\n                return (\r\n                  // <li style={{ display: 'inline', margin: '5px' }}>\r\n                  //   <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n                  //     onClick={this.handleOpenModal.bind(\r\n                  //       this,\r\n                  //       item.name.toLowerCase()\r\n                  //     )}\r\n                  //   >\r\n                  //     {' '}\r\n                  //     <i className=\"fas fa-tags\" /> {item.name}{' '}\r\n                  //   </a>\r\n                  // </li>\r\n\r\n                  <li style={{ display: 'inline', margin: '5px' }}>\r\n                    <a\r\n                      href={\r\n                        '/training-resources/' +\r\n                        this.state.resourcePath[2] +\r\n                        '/map/' +\r\n                        item.title.toLowerCase()\r\n                      }\r\n                    >\r\n                      {' '}\r\n                      <i className=\"fas fa-tags\" /> {item.title}{' '}\r\n                    </a>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.resources);\r\n    let attributes = [];\r\n    let selectedCompetencies = [];\r\n    let attribute_types = [];\r\n    let framework_repeat = [];\r\n    //console.log(this.state.resource);\r\n    let item = this.state.resource;\r\n    let frameworkLiveVersion = '';\r\n\r\n    let link = '/bioexcel/1.1';\r\n    let check_array = Array.isArray(item.competency_profile);\r\n    const Resource = (\r\n      // this.state.resource.map((item, index) => {\r\n      //   if (item.id === this.state.resourcePath[2]) {\r\n      //     item.competency_profile.map(profile =>\r\n      //       profile.domains.map(domain =>\r\n      //         domain.competencies.map(competency =>\r\n      //           competency.attributes.map(\r\n      //             attribute =>\r\n      //               attributes.push(attribute.uuid + 'id' + attribute.id),\r\n      //             selectedCompetencies.push(competency.id)\r\n      //           )\r\n      //         )\r\n      //       )\r\n      //     );\r\n\r\n      //     item.competency_profile.map(profile =>\r\n      //         selectedCompetencies.push(profile.competency_id)\r\n      //       );\r\n\r\n      //return (\r\n      <div>\r\n        <div>\r\n          <div className={'row'}>\r\n            <h2>{item.title}</h2>\r\n          </div>\r\n\r\n          <div className={'row'}>\r\n            <div className={'column large-9'}>\r\n              <div className={'callout'}>\r\n                {item.date ? (\r\n                  <p>\r\n                    <strong>Date:</strong> {item.dates}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {item.keywords ? (\r\n                  <p>\r\n                    <strong>Keywords:</strong> {item.keywords}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {item.location ? (\r\n                  <p>\r\n                    <strong>Location:</strong> {item.location}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {item.type ? (\r\n                  <p>\r\n                    <strong>Type:</strong> {item.type}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {item.url ? (\r\n                  <p>\r\n                    <strong> URL: </strong>{' '}\r\n                    <a href={item.url} target={'_blank'}>\r\n                      {item.url}\r\n                    </a>\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <h3>Overview</h3>\r\n              {item.description ? Parser(item.description) : ''}\r\n\r\n              {item.target_audience\r\n                ? Parser('<h3>Target Audience</h3>' + item.target_audience)\r\n                : ''}\r\n              {item.learning_outcomes\r\n                ? Parser('<h3>Learning Outcomes</h3>' + item.learning_outcomes)\r\n                : ''}\r\n              {item.organisers\r\n                ? Parser('<h3>Organizers</h3>' + item.organisers)\r\n                : ''}\r\n\r\n              {item.trainers ? Parser('<h3>Trainers</h3>' + item.trainers) : ''}\r\n              <h3>Competency Profile</h3>\r\n\r\n              <table className={'hover'}>\r\n                <tbody>\r\n                  {check_array\r\n                    ? item.competency_profile.map(profile => {\r\n                        return (\r\n                          <tr>\r\n                            {this.state.frameworks.map(framework => {\r\n                              if (framework.nid === profile.id) {\r\n                                framework.attribute_types.map(type =>\r\n                                  attribute_types.push(type.title)\r\n                                );\r\n                                frameworkLiveVersion = framework.versions.find(\r\n                                  version => version.status === 'live'\r\n                                );\r\n                              }\r\n\r\n                              return null;\r\n                            })}\r\n                            <td>\r\n                              <h4>{profile.title}</h4>\r\n                            </td>\r\n                            <td>\r\n                              {profile.domains.map(domain => (\r\n                                <div>\r\n                                  <h5>{domain.title}</h5>\r\n                                  <ul>\r\n                                    {domain.competencies.map(competency => (\r\n                                      <li>\r\n                                        <span\r\n                                          className={\r\n                                            competency.archived == 'archived'\r\n                                              ? 'archived'\r\n                                              : ''\r\n                                          }\r\n                                        >\r\n                                          {competency.title}\r\n                                          {competency.archived == 'archived' ? (\r\n                                            <ItemVersions\r\n                                              framework=\"bioexcel\"\r\n                                              versions={link}\r\n                                            />\r\n                                          ) : (\r\n                                            ''\r\n                                          )}\r\n                                        </span>\r\n                                        <ul>\r\n                                          {attribute_types.map(type => (\r\n                                            <span>\r\n                                              {competency.attributes.map(\r\n                                                attribute => {\r\n                                                  if (attribute.type === type) {\r\n                                                    return (\r\n                                                      <li>\r\n                                                        {' '}\r\n                                                        <em>{type}</em> -{' '}\r\n                                                        <span\r\n                                                          className={\r\n                                                            attribute.archived ==\r\n                                                            'archived'\r\n                                                              ? 'archived'\r\n                                                              : ''\r\n                                                          }\r\n                                                        >\r\n                                                          {attribute.title}\r\n                                                          {attribute.archived ==\r\n                                                          'archived' ? (\r\n                                                            <ItemVersions\r\n                                                              framework={\r\n                                                                profile.title\r\n                                                              }\r\n                                                              version={\r\n                                                                frameworkLiveVersion.number\r\n                                                              }\r\n                                                            />\r\n                                                          ) : (\r\n                                                            ''\r\n                                                          )}\r\n                                                          {attribute.archived ==\r\n                                                          'archived' ? (\r\n                                                            <a\r\n                                                              href={\r\n                                                                '/training-resources/' +\r\n                                                                item.id +\r\n                                                                '/demap/' +\r\n                                                                attribute.id\r\n                                                              }\r\n                                                            >\r\n                                                              <i class=\"fas fa-times-circle\" />\r\n                                                            </a>\r\n                                                          ) : (\r\n                                                            ''\r\n                                                          )}\r\n                                                        </span>\r\n                                                      </li>\r\n                                                    );\r\n                                                  }\r\n                                                  return null;\r\n                                                }\r\n                                              )}\r\n                                            </span>\r\n                                          ))}\r\n                                        </ul>\r\n                                      </li>\r\n                                    ))}\r\n                                  </ul>\r\n                                </div>\r\n                              ))}\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div\r\n              className={\r\n                'column large-3 callout industry-background white-color'\r\n              }\r\n            >\r\n              <h3>More information</h3>\r\n              <p>No data available</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'column large-12'}>\r\n          {Resource}\r\n          {this.mappingBlock()}\r\n        </div>\r\n\r\n        <div style={{ overflow: 'scroll' }}>\r\n          <ReactModal\r\n            isOpen={this.state.showModal}\r\n            className=\"Modal\"\r\n            overlayClassName=\"Overlay\"\r\n            contentLabel=\"Minimal Modal Example\"\r\n          >\r\n            <div>\r\n              <h2 style={{ 'text-align': 'center' }}>\r\n                Manage competency profile for{' '}\r\n                {this.state.selectedFramework.toUpperCase()}{' '}\r\n                <i\r\n                  className=\"fas fa-window-close float-right\"\r\n                  data-close\r\n                  onClick={this.handleCloseModal}\r\n                />{' '}\r\n              </h2>\r\n            </div>\r\n            <table>\r\n              <AttributeMap\r\n                selectedCompetencies={selectedCompetencies}\r\n                selectedAttributes={attributes}\r\n                selectedFramework={this.state.selectedFramework}\r\n                resourceID={this.state.resourcePath[2]}\r\n                handleCloseModal={this.handleCloseModal}\r\n              />\r\n            </table>\r\n          </ReactModal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ResDetails = () => (\r\n  <Switch>\r\n    <Route exact path=\"/training-resources/:id\" component={ResourceDetails} />\r\n  </Switch>\r\n);\r\n\r\nexport default ResDetails;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Parser from 'html-react-parser';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { apiUrl } from '../services/http/http';\r\n\r\nclass ResourcesList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resources: [],\r\n      filterType: '',\r\n      filterMapping: '',\r\n      userid: ''\r\n    };\r\n    this.archiveHandle = this.archiveHandle.bind(this);\r\n  }\r\n\r\n  checkUser() {\r\n    if (!localStorage.getItem('roles')) {\r\n      this.props.history.push('/');\r\n    } else if (!localStorage.getItem('roles').includes('content_manager')) {\r\n      alert(\r\n        'You are not authorised to access this page. Contact the administrator'\r\n      );\r\n      this.props.history.push('/');\r\n    }\r\n    console.log(localStorage.getItem('roles'));\r\n    //console.log(localStorage.getItem('userid'));\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.updateFlag) {\r\n      this.fetchData();\r\n      setTimeout(() => {\r\n        this.setState({ updateFlag: false });\r\n      }, 1000);\r\n      console.log('componentDidUpdate');\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    let csrfURL = `${apiUrl}/rest/session/token`;\r\n    fetch(csrfURL)\r\n      .then(Response => Response)\r\n      .then(findresponse2 => {\r\n        this.setState({ csrf: findresponse2 });\r\n      });\r\n\r\n    //let resourcesURL = `${apiUrl}/api/v1/training-resources/all?_format=json`;\r\n    let resourcesURL = `${apiUrl}/api/resources?_format=json&timestamp=${Date.now()}`;\r\n    fetch(resourcesURL)\r\n      .then(Response => Response.json())\r\n      .then(findresponse => {\r\n        this.setState({\r\n          resources: findresponse\r\n        });\r\n      });\r\n  }\r\n\r\n  checkAuthor(author_id) {\r\n    let userid = localStorage.getItem('userid');\r\n    if (userid == author_id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n    //console.log(localStorage.getItem('userid'));\r\n  }\r\n\r\n  filter(e) {\r\n    this.setState({ filter: e.target.value });\r\n  }\r\n\r\n  filterTypeHandle(e) {\r\n    this.setState({ filterType: e.target.value });\r\n  }\r\n\r\n  filterMappingHandle(e) {\r\n    if (this.state.filterMapping) {\r\n      this.setState({ filterMapping: 0 });\r\n    } else {\r\n      this.setState({ filterMapping: 1 });\r\n    }\r\n  }\r\n\r\n  archiveHandle(rid, status, event) {\r\n    //alert(\"competency \"+ cid+ \"is \"+ status);\r\n    let archivedStatus = '';\r\n    if (status === 1) {\r\n      archivedStatus = false;\r\n    } else {\r\n      archivedStatus = true;\r\n    }\r\n    let token = localStorage.getItem('csrf_token');\r\n    fetch(`${apiUrl}/node/` + rid + '?_format=hal_json', {\r\n      credentials: 'include',\r\n      method: 'PATCH',\r\n      cookies: 'x-access-token',\r\n      headers: {\r\n        Accept: 'application/hal+json',\r\n        'Content-Type': 'application/hal+json',\r\n        'X-CSRF-Token': token,\r\n        Authorization: 'Basic'\r\n      },\r\n      body: JSON.stringify({\r\n        _links: {\r\n          type: {\r\n            href: `${apiUrl}/rest/type/node/training_resource`\r\n          }\r\n        },\r\n        field_archived: [\r\n          {\r\n            value: archivedStatus\r\n          }\r\n        ],\r\n        type: [\r\n          {\r\n            target_id: 'training_resource'\r\n          }\r\n        ]\r\n      })\r\n    });\r\n\r\n    this.setState({ updateFlag: true });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    this.checkUser();\r\n    let resources = this.state.resources;\r\n    if (this.state.filter) {\r\n      resources = resources.filter(\r\n        item =>\r\n          item.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\r\n          item.description\r\n            .toLocaleLowerCase()\r\n            .includes(this.state.filter.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (this.state.filterType !== 'All') {\r\n      resources = resources.filter(item =>\r\n        item.type\r\n          .toLocaleLowerCase()\r\n          .includes(this.state.filterType.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (this.state.filterMapping) {\r\n      resources = resources.filter(item =>\r\n        item.competency_profile.some(\r\n          profile =>\r\n            profile.attribute_archived == 'archived' ||\r\n            profile.competency_archived == 'archived' ||\r\n            profile.domain == 'archived'\r\n        )\r\n      );\r\n      console.log('filter applied');\r\n    }\r\n\r\n    const ListOfResources = resources.map((item, index) => (\r\n      <tr key={index}>\r\n        <td>{index + 1} </td>\r\n        <td>\r\n          {' '}\r\n          <Link to={'/training-resources/' + item.id}>{item.title} </Link>\r\n        </td>\r\n        <td>{item.dates}</td>\r\n        <td>{item.type}</td>\r\n        <td>\r\n          <a href={item.url} target={'_blank'}>\r\n            {item.url}\r\n          </a>\r\n        </td>\r\n        <td>\r\n          {item.archived === '1' ? (\r\n            <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n              onClick={this.archiveHandle.bind(this, item.id, 1)}\r\n            >\r\n              {' '}\r\n              <i className=\"fas fa-toggle-on\" /> <span>Archived</span>{' '}\r\n            </a>\r\n          ) : (\r\n            <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n              onClick={this.archiveHandle.bind(this, item.id, 0)}\r\n            >\r\n              {' '}\r\n              <i className=\"fas fa-toggle-off\" />\r\n            </a>\r\n          )}\r\n        </td>\r\n        <td>\r\n          {this.checkAuthor(item.author) ? (\r\n            <Link to={`/training-resource/edit/${item.id}`}>\r\n              <i className=\"fas fa-edit\" />{' '}\r\n            </Link>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div className={'row'}>\r\n        <h3>Training Resources</h3>\r\n        <div className=\"row\">\r\n          <div className=\"column large-6\">\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.filter.bind(this)}\r\n                placeholder=\"Type to search\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"column large-2\">\r\n            <div>\r\n              <select ref={'type'} onChange={this.filterTypeHandle.bind(this)}>\r\n                <option value={'All'}>All</option>\r\n                <option value={'Online'}>Online</option>\r\n                <option value={'Face-to-Face'}>Face-to-Face</option>\r\n                <option value={'Webinar'}>Webinar</option>\r\n                <option value={'Hackathon'}>Hackathon</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"column large-3\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkboxMapping\"\r\n              checked={this.state.filterMapping}\r\n              onChange={this.filterMappingHandle.bind(this)}\r\n            />\r\n            <span id=\"checkboxMappingLabel\" for=\"checkboxMapping\">\r\n              Items with deprecated mapping\r\n            </span>\r\n          </div>\r\n          <div className={'column large-1'}>\r\n            <Link\r\n              className={'button float-right'}\r\n              to={'/training-resource/create'}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"> </i> Add new{' '}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>S. No.</th>\r\n              <th>Title</th>\r\n              <th>Date(s)</th>\r\n              <th>Type</th>\r\n              <th>URL</th>\r\n              <th>Archive</th>\r\n              <th>Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{ListOfResources}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Resources = () => (\r\n  <Switch>\r\n    <Route exact path=\"/all-training-resources\" component={ResourcesList} />\r\n  </Switch>\r\n);\r\n\r\nexport default Resources;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Parser from 'html-react-parser';\nimport { Link } from 'react-router-dom';\n\nimport { apiUrl } from '../services/http/http';\n\nclass ResourcesHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resources: [],\n      filterType: ''\n    };\n    //this.archiveHandle = this.archiveHandle.bind(this);\n  }\n\n  checkUser() {\n    if (!localStorage.getItem('roles')) {\n      this.props.history.push('/');\n    } else if (!localStorage.getItem('roles').includes('content_manager')) {\n      alert(\n        'You are not authorised to access this page. Contact the administrator'\n      );\n      this.props.history.push('/');\n    }\n    console.log(localStorage.getItem('roles'));\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.updateFlag) {\n  //     this.fetchData();\n  //     setTimeout(() => {\n  //       this.setState({ updateFlag: false });\n  //     }, 1000);\n  //     console.log('componentDidUpdate');\n  //   }\n  // }\n\n  // componentDidMount() {\n  //   this.fetchData();\n  // }\n\n  // fetchData() {\n  //   let csrfURL = `${apiUrl}/rest/session/token`;\n  //   fetch(csrfURL)\n  //     .then(Response => Response)\n  //     .then(findresponse2 => {\n  //       this.setState({ csrf: findresponse2 });\n  //     });\n\n  //   //let resourcesURL = `${apiUrl}/api/v1/training-resources/all?_format=json`;\n  //   let resourcesURL = `${apiUrl}/api/resources?_format=json&timestamp=${Date.now()}`;\n  //   fetch(resourcesURL)\n  //     .then(Response => Response.json())\n  //     .then(findresponse => {\n  //       this.setState({\n  //         resources: findresponse\n  //       });\n  //     });\n  // }\n\n  // filter(e) {\n  //   this.setState({ filter: e.target.value });\n  // }\n\n  // filterTypeHandle(e) {\n  //   this.setState({ filterType: e.target.value });\n  // }\n\n  // archiveHandle(rid, status, event) {\n  //   //alert(\"competency \"+ cid+ \"is \"+ status);\n  //   let archivedStatus = '';\n  //   if (status === 1) {\n  //     archivedStatus = false;\n  //   } else {\n  //     archivedStatus = true;\n  //   }\n  //   let token = localStorage.getItem('csrf_token');\n  //   fetch(`${apiUrl}/node/` + rid + '?_format=hal_json', {\n  //     credentials: 'include',\n  //     method: 'PATCH',\n  //     cookies: 'x-access-token',\n  //     headers: {\n  //       Accept: 'application/hal+json',\n  //       'Content-Type': 'application/hal+json',\n  //       'X-CSRF-Token': token,\n  //       Authorization: 'Basic'\n  //     },\n  //     body: JSON.stringify({\n  //       _links: {\n  //         type: {\n  //           href: `${apiUrl}/rest/type/node/training_resource`\n  //         }\n  //       },\n  //       field_archived: [\n  //         {\n  //           value: archivedStatus\n  //         }\n  //       ],\n  //       type: [\n  //         {\n  //           target_id: 'training_resource'\n  //         }\n  //       ]\n  //     })\n  //   });\n\n  //   this.setState({ updateFlag: true });\n\n  //   event.preventDefault();\n  // }\n\n  render() {\n    this.checkUser();\n    // let resources = this.state.resources;\n    // if (this.state.filter) {\n    //   resources = resources.filter(\n    //     item =>\n    //       item.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n    //       item.description\n    //         .toLocaleLowerCase()\n    //         .includes(this.state.filter.toLowerCase())\n    //   );\n    // }\n\n    // if (this.state.filterType !== 'All') {\n    //   resources = resources.filter(item =>\n    //     item.type\n    //       .toLocaleLowerCase()\n    //       .includes(this.state.filterType.toLowerCase())\n    //   );\n    // }\n\n    // const ListOfResources = resources.map((item, index) => (\n    //   <tr key={index}>\n    //     <td>{index + 1} </td>\n    //     <td>\n    //       {' '}\n    //       <h4>\n    //         {' '}\n    //         <Link to={'/training-resources/' + item.id}>{item.title} </Link>\n    //       </h4>\n    //       <p>{item.dates} </p>\n    //       <strong>Learning resource type:</strong> {item.type} <br />\n    //       {Parser(item.description.substr(0, 240) + '...')} <br />\n    //       <br />\n    //       <strong> URL: </strong>{' '}\n    //       <a href={item.url} target={'_blank'}>\n    //         {item.url}\n    //       </a>\n    //     </td>\n    //     <td>\n    //       {item.archived === '1' ? (\n    //         <a // eslint-disable-line jsx-a11y/anchor-is-valid\n    //           onClick={this.archiveHandle.bind(this, item.id, 1)}\n    //         >\n    //           {' '}\n    //           <i className=\"fas fa-toggle-on\" /> <span>Archived</span>{' '}\n    //         </a>\n    //       ) : (\n    //         <a // eslint-disable-line jsx-a11y/anchor-is-valid\n    //           onClick={this.archiveHandle.bind(this, item.id, 0)}\n    //         >\n    //           {' '}\n    //           <i className=\"fas fa-toggle-off\" />\n    //         </a>\n    //       )}\n    //     </td>\n    //     <td>\n    //       <Link to={`/training-resource/edit/${item.id}`}>\n    //         <i className=\"fas fa-edit\" />{' '}\n    //       </Link>\n    //     </td>\n    //   </tr>\n    // ));\n    return (\n      <div className={'row'}>\n        <h3>Training Resources</h3>\n        <div className=\"row\">\n          <div className=\"column large-4 callout\">\n            \n              \n                <Link\n                  className={'button float-right'}\n                  to={'/all-training-resources'}\n                >\n                  <i className=\"fas fa-list\"> </i> View published training resources{' '}\n                </Link>\n                \n            \n            \n          </div>\n          <div className=\"column large-4 callout\">\n            \n                <Link\n                  className={'button float-right'}\n                  to={'#'}\n                >\n                  <i className=\"fas fa-list\"> </i> View unpublished training resources{' '}\n                </Link>\n                \n            \n          </div>\n          <div className={'column large-4 callout'}>\n          \n            <Link\n              className={'button float-right'}\n              to={'#'}\n            >\n              <i className=\"fas fa-tasks\"> </i> Manage training resources{' '}\n            </Link>\n          \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ResourcesHomepage = () => (\n  <Switch>\n    <Route exact path=\"/training-resources-home\" component={ResourcesHome} />\n  </Switch>\n);\n\nexport default ResourcesHomepage;\n","import React from 'react';\r\n\r\nimport { apiUrl } from '../services/http/http';\r\n\r\nclass ChangePassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      roles: '',\r\n      user: ''\r\n    };\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n  }\r\n\r\n  handlePasswordChange(e) {\r\n    let old = this.refs.old.value;\r\n    let new1 = this.refs.new1.value;\r\n    let uid = localStorage.getItem('userid');\r\n    fetch(`${apiUrl}/user/` + uid + '/password?_format=json', {\r\n      credentials: 'include',\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRF-Token': localStorage.getItem('csrf_token')\r\n      },\r\n      body: JSON.stringify({\r\n        _links: {\r\n          type: {\r\n            href: `${apiUrl}/rest/type/user/user`\r\n          }\r\n        },\r\n        old: [\r\n          {\r\n            value: old\r\n          }\r\n        ],\r\n        new: [\r\n          {\r\n            target_id: new1\r\n          }\r\n        ]\r\n      })\r\n    })\r\n      .then(resp => resp)\r\n      .then(data =>\r\n        setTimeout(() => {\r\n          alert('Password changed successfully');\r\n          window.location.reload();\r\n        }, 1000)\r\n      );\r\n    e.preventDefault();\r\n  }\r\n\r\n  checkUser() {\r\n    if (!localStorage.getItem('roles')) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.checkUser();\r\n    return (\r\n      <div>\r\n        <h3>Change password:</h3>\r\n        <form id={'passChange'}>\r\n          <input type={'password'} ref={'old'} placeholder={'Old password'} />\r\n          <input type={'password'} ref={'new1'} placeholder={'New password'} />\r\n          <input type={'password'} placeholder={'Confirm new password'} />\r\n          <input\r\n            type={'button'}\r\n            className={'button'}\r\n            onClick={this.handlePasswordChange.bind(this)}\r\n            value={'Submit'}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePassword;\r\n","import React from 'react';\r\n\r\nconst About = () => (\r\n  <React.Fragment>\r\n    <h2>About competency mapper</h2>\r\n    <p className=\"lead\">\r\n      Competency mapper is a web-based tool to support the creation and\r\n      management of competency frameworks for professionals working in the\r\n      biomolecular sciences.\r\n    </p>\r\n    <h3>Anyone can..</h3>\r\n    <p>\r\n      <ul>\r\n        <li>\r\n          Explore the five competency frameworks that we currently have in the\r\n          system\r\n        </li>\r\n        <li>\r\n          Click on any competency to find the knowledge, skills and attitudes\r\n          (KSAs) associated with it\r\n        </li>\r\n        <li>\r\n          See the relationships between different competency frameworks; for\r\n          example, if a competency in framework 2 is derived from one in\r\n          framework 1, this information is captured\r\n        </li>\r\n        <li>\r\n          Access a list of courses that have been mapped to a particular\r\n          competency\r\n        </li>\r\n        <li>\r\n          View summary information on each of these courses, including a link\r\n          through to the course website\r\n        </li>\r\n      </ul>\r\n    </p>\r\n    <h3>In addition to the above, content editors can...</h3>\r\n    <ul>\r\n      <li>Map courses to any competency in the mapper</li>\r\n      <li>Map courses to any combination of knowledge, skills and attitudes</li>\r\n    </ul>\r\n    <h3>In addition to the above, administrators can...</h3>\r\n    <ul>\r\n      <li>Build a completely new competency framework from a blank template</li>\r\n      <li>Make minor updates to an existing competency framework</li>\r\n      <li>\r\n        If a competency framework has undergone major updates such as merging,\r\n        splitting or deprecation of competencies, create and publish a new\r\n        version of the framework without overwriting the previous version, and\r\n        without losing links to pre-existing mappings\r\n      </li>\r\n      <li>\r\n        Create and edit multiple personas or roles associated with a competency\r\n        framework\r\n      </li>\r\n      <li>\r\n        For each competency in an associated framework, define the level of\r\n        competency required by any of the personas/roles associated with it,\r\n        using an administrator-defined list of variables.\r\n      </li>\r\n    </ul>\r\n\r\n    <h3>What is competency?</h3>\r\n    <p>\r\n      By definition, competency is an observable ability of any professional,\r\n      integrating multiple components such as knowledge, skills, values and\r\n      attitudes. It is observable, so its acquisition can be validated\r\n      objectively.\r\n    </p>\r\n    <h4>Why is it relevant?</h4>\r\n    <p>\r\n      Competency provides a shared ‘currency’ applicable to learning of all\r\n      types and at all career stages.\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        Individual professionals can use competency as a career development\r\n        tool: by documenting the competencies that you have gained, and the\r\n        evidence that you have gained them, in a competency portfolio you can\r\n        seek further training to fill gaps in your portfolio, or map your\r\n        existing portfolio to roles that you might not previously have\r\n        considered.\r\n      </li>\r\n      <li>\r\n        Professional bodies and employers can use competency to define\r\n        competency frameworks for different roles or professions. These provide\r\n        useful guidance when hiring and promoting individuals, and can also\r\n        provide the basis for professional recognition in regulated professions.\r\n      </li>\r\n      <li>\r\n        Course providers can use competency to develop training (by asking what\r\n        competencies their trainees need to gain) and, where appropriate, to\r\n        assess whether training has been effective.\r\n      </li>\r\n    </ul>\r\n\r\n    <h3>What is a competency framework?</h3>\r\n    <p>\r\n      A competency framework defines the competencies required to fulfil a\r\n      particular role. competency frameworks are typically defined by\r\n      professional bodies or learned societies in collaboration with employers.\r\n      Several projects under the EU’s Horizon 2020 framework have developed\r\n      competency frameworks to support emerging professions.\r\n    </p>\r\n\r\n    <h3>Who is developing the competency mapper?</h3>\r\n    <p>\r\n      The competency mapper is being developed by the{' '}\r\n      <a\r\n        href={'https://www.ebi.ac.uk/about/people/cath-brooksbank'}\r\n        target={'_blank'}\r\n      >\r\n        {' '}\r\n        EMBL-EBI training team{' '}\r\n      </a>{' '}\r\n      with the{' '}\r\n      <a href={'https://bioexcel.eu/'} target={'_blank'}>\r\n        {' '}\r\n        BioExcel{' '}\r\n      </a>{' '}\r\n      competency framework as its primary use case.{' '}\r\n    </p>\r\n    <p>\r\n      EMBL-EBI’s Training programme uses a competency-based approach to\r\n      developing new courses: put simply, we ask ourselves ‘What competency or\r\n      competencies does our audience for this course need to develop?’ before we\r\n      create the programme and content for a new course, and before we make a\r\n      significant update to an existing course.\r\n    </p>\r\n    <p>\r\n      The team has contributed to, and helped to steer, a number of initiatives\r\n      to develop new training programmes by defining competency requirements in\r\n      relation to a specific target audience and building a competency framework\r\n      for that audience. Competency-based projects that we have been involved in\r\n      include:\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        The ISCB education committee’s{' '}\r\n        <a href={'https://europepmc.org/articles/PMC5794068'} target={'_blank'}>\r\n          {' '}\r\n          competency framework for bioinformatics professionals{' '}\r\n        </a>{' '}\r\n      </li>\r\n      <li>\r\n        A clinical bioinformatics competency framework to support Health\r\n        Education England to prepare clinical practitioners for the application\r\n        of genomics in the healthcare service\r\n      </li>\r\n      <li>\r\n        The{' '}\r\n        <a\r\n          href={\r\n            'https://drive.google.com/file/d/0B3BA3KSKGOoQb0hvUkx3a3lMS00/view'\r\n          }\r\n          target={'_blank'}\r\n        >\r\n          {' '}\r\n          RItrain competency framework{' '}\r\n        </a>{' '}\r\n        for managers and leaders of research infrastructure\r\n      </li>\r\n      <li>\r\n        The{' '}\r\n        <a\r\n          href={'https://zenodo.org/record/154085#.WbUNUhNSwUE'}\r\n          target={'_blank'}\r\n        >\r\n          {' '}\r\n          CORBEL competency framework{' '}\r\n        </a>{' '}\r\n        for technical operators of research infrastructure\r\n      </li>\r\n      <li>\r\n        The{' '}\r\n        <a\r\n          href={'https://zenodo.org/record/264231#.WbUNoRNSwUE'}\r\n          target={'_blank'}\r\n        >\r\n          {' '}\r\n          BioExcel competency framework{' '}\r\n        </a>\r\n        for scientists working on biomolecular modelling and simulation\r\n      </li>\r\n      <p />\r\n      <p>\r\n        These competency frameworks were designed to be used by the training\r\n        communities who developed them, and openly available to anyone who might\r\n        find them useful, yet all too often they end up buried in a PDF file as\r\n        part of a project deliverable. This made us long for a web-based tool\r\n        that would make these frameworks,and the training associated with them,\r\n        readily discoverable. We therefore decided to build that tool, and\r\n        although it’s still in the early stages of development we’ve decided to\r\n        make it openly available now so that we can seek broad input to improve\r\n        it and make it as useful as possible to the education and training\r\n        community at large. If you have comments or suggestions, please{' '}\r\n        <a href={'mailto:competency@ebi.ac.uk'}> contact us </a>.\r\n      </p>\r\n    </ul>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nimport { removeHtmlTags } from '../../services/util/util';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction FrameworkButton({ framework }) {\r\n  let description = removeHtmlTags(framework.description);\r\n  if (description.length > 120) {\r\n    description = `${description.slice(0, 120).trim()}...`;\r\n  }\r\n  const liveVersion = framework.versions.reduce((prevVersion, newVersion) => {\r\n    if (newVersion.status === 'live') {\r\n      return newVersion.number;\r\n    }\r\n    return prevVersion;\r\n  }, null);\r\n\r\n  if (liveVersion === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"column medium-4\">\r\n      <Link\r\n        className=\"column callout\"\r\n        data-equalizer-watch\r\n        to={`/framework/${framework.title.toLowerCase()}/${liveVersion}`}\r\n      >\r\n        <img\r\n          className=\"float-center margin-bottom-medium\"\r\n          style={{ height: '6rem' }}\r\n          src={framework.logo[0].url}\r\n          alt=\"competency logo\"\r\n        />\r\n        <h5>\r\n          {description}\r\n          <i className=\"icon icon-functional\" data-icon=\">\" />\r\n        </h5>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrameworkButton;\r\n","import React from 'react';\r\n\r\nimport FrameworkButton from '../framework-button/FrameworkButton';\r\n\r\nconst $ = window.$;\r\n\r\nfunction FrameworkButtons({ frameworks }) {\r\n  const selfRef = new React.createRef();\r\n\r\n  const invokeFoundation = () => {\r\n    window.setTimeout(() => $(selfRef.current).foundation());\r\n    return frameworks.map(framework => (\r\n      <FrameworkButton key={framework.nid} framework={framework} />\r\n    ));\r\n  };\r\n\r\n  return frameworks.length < 1 ? null : (\r\n    <div className=\"row\" data-equalizer ref={selfRef}>\r\n      {invokeFoundation()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrameworkButtons;\r\n","import React, { Component } from 'react';\r\n\r\nimport FrameworkButtons from '../components/framework-buttons/FrameworkButtons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withSnackbar } from 'notistack';\r\nimport ActiveRequestsService from '../services/active-requests/active-requests';\r\nimport CompetencyService from '../services/competency/competency';\r\n\r\nclass Frameworks extends Component {\r\n  activeRequests = new ActiveRequestsService();\r\n  competencyService = new CompetencyService();\r\n\r\n  state = {\r\n    frameworks: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.activeRequests.startRequest();\r\n      const frameworks = await this.competencyService.getAllVersionedFrameworks();\r\n      this.setState({ frameworks });\r\n    } catch (error) {\r\n      this.props.enqueueSnackbar('Unable to fetch framework data', {\r\n        variant: 'error'\r\n      });\r\n      console.error(error);\r\n    } finally {\r\n      this.activeRequests.finishRequest();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { frameworks } = this.state;\r\n\r\n    return (\r\n      <div className=\"column\">\r\n        <h3>Overview</h3>\r\n        <p className=\"lead\">\r\n          Competency mapper is a web-based tool to support the creation and\r\n          management of competency frameworks for professionals working in the\r\n          biomolecular sciences{' '}\r\n          <Link to=\"/about\" className=\"readmore\">\r\n            read more{' '}\r\n          </Link>\r\n        </p>\r\n\r\n        <FrameworkButtons frameworks={frameworks} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Frameworks);\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Collapsible from 'react-collapsible';\nimport ReactModal from 'react-modal';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport CompetencyList from './CompetencyList';\nimport { apiUrl } from '../services/http/http';\nimport CompetencyService from '../services/competency/competency';\nimport ActiveRequestsService from '../services/active-requests/active-requests';\n\nclass CompetencySettings extends React.Component {\n activeRequests = new ActiveRequestsService();\n     competencyService = new CompetencyService();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      path: this.props.location.pathname.split('/'),\n      competency:'',\n      competencyUUID: '',\n      competencyTitle: '',\n      frameworkList:[],\n      domainID:'',\n      domainUuid:'',\n      csrf:'',\n      mapping:''\n    };\n     \n\n    this.editDomain = this.editDomain.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onTextChange = this.onTextChange.bind(this);\n  }\n\n  async fetchData(){\n    let competencyID = this.state.path[4];\n    let url = `${apiUrl}/node/`+competencyID+`/?_format=json`;\n    fetch(url)\n    .then(result => result.json())\n    .then(findresponse => {\n        this.setState({ competency: findresponse }, this.setMappingText);\n      });\n\n    // Load all domains of all frameworks from version_manager API\n\n    let versoinManagerURL = `${apiUrl}/api/version_manager/?_format=json`;\n    fetch(versoinManagerURL)\n    .then(result => result.json())\n    .then(findresponse => {\n        this.setState({ frameworkList: findresponse });\n      });\n\n    console.log(\"fetchData\");\n  }\n\n  async setMappingText(){\n    let competency = this.state.competency;\n    if(competency.field_map_other_competency.length > 0){\n      this.setState({mapping: competency.field_map_other_competency[0].value});\n    }\n    \n  }\n\n   componentDidMount() {\n     this.fetchData();\n    //await this.setMappingText();\n    \n  }\n\n\n\n  editDomain(e) {\n    let competencyID = this.state.path[4];\n    let selectedDomainID = this.state.domainID;\n    let selectedDomainUUID = this.state.domainUuid;\n    let mapping = this.state.mapping;\n    if(!selectedDomainID){\n      selectedDomainID = this.state.competency.field_domain[0].target_id;\n      selectedDomainUUID = this.state.competency.field_domain[0].target_uuid;\n    }\n    this.competencyService.changeDomain(competencyID, selectedDomainID, selectedDomainUUID, mapping);\n    //console.log(\"editDomain() called\");\n    this.props.history.push('/framework/'+this.state.path[2]+'/manage/competencies');\n    e.preventDefault();\n    \n  }\n\n  onTextChange(event){\n    this.setState({mapping: event.target.value});\n    console.log(this.state.mapping);\n  }\n\n  handleChange(event){\n    let dataset = event.target.options[event.target.selectedIndex].dataset;\n    this.setState({domainID: dataset.id, domainUuid:dataset.uuid});\n    console.log(dataset.uuid);\n  }\n\n  render() {\n    let competency_title = \"\";\n    let domain_id = \"\";\n    let domain_uuid = \"\";\n    let domain_title = \"\";\n    let competency = this.state.competency;\n    let frameworkList = this.state.frameworkList;\n    let domainOptions = [];\n    let domainArray = [];\n    //let mapped_other_competency = \"\";\n    \n    if(frameworkList){\n      frameworkList.map(framework => {\n         if(framework.title.toLowerCase() === this.state.path[2]){\n           framework.domains.map(domain => {\n             domainOptions.push(<option key={domain.id} data-id={domain.id} data-uuid={domain.uuid} value={domain.id}>{domain.title }</option>)\n             domainArray.push({key:domain.id, value:domain.title})\n           })\n         } \n      })\n      \n    }\n\n\n\n    if(competency){\n      competency_title = competency.title[0].value;\n      domain_id = competency.field_domain[0].target_id;\n      domain_uuid = competency.field_domain[0].target_uuid;\n      //mapped_other_competency = competency.field_map_other_competency[0].value;//?competency.field_map_other_competency[0].value:\"\";\n      if(domainArray.length > 0){\n        let obj = domainArray.find(d => d.key == domain_id);\n        domain_title = obj.value;\n      }\n      //console.log(competency.field_map_other_competency[0].value);\n    }\n\n   \n    return (\n      <div>\n        <h2>Change domain</h2>\n        <table className=\"table hover stack\">\n          <tbody>\n          <tr>\n              <td>\n                <h4>Domain:</h4>\n              </td>\n              <td>\n                <h4>{domain_title}</h4>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <h4>Competency:</h4>\n              </td>\n              <td>\n                <h4>{competency_title}</h4>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <p className=\"lead\">Select the domain from the following list to change:</p>\n                <form id={'changeDomainForm'} onSubmit={this.editDomain.bind(this)}>\n                <div className=\"row\">\n                  <div className=\"column large-11\">\n                    <select value={this.state.domainID?this.state.domainID:domain_id} onChange={this.handleChange}>\n                      {domainOptions}\n                    </select>\n                    <label>\n                      Maps to competency/attribute from other framework\n                      <input\n                        type=\"text\"\n                        placeholder=\"Framework (version), competency or attribute\"\n                        name=\"mapping\"\n                        value={this.state.mapping}\n                        onChange={this.onTextChange.bind(this)}\n                      />\n                    </label>\n                    <input type=\"submit\" className=\"button\" value=\"Save\" />\n            \n                  </div>\n                  <div className=\"column large-1\">\n                    \n                  </div>\n                </div>\n              </form>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst CompetencySettingsRoot = () => (\n  <Switch>\n    <Route exact path=\"/framework/:framework/competency/:id/settings\" component={CompetencySettings} />\n  </Switch>\n);\n\nexport default CompetencySettingsRoot;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport CKEditor from 'react-ckeditor-component';\nimport FileUpload from './FileUpload';\nimport { apiUrl } from '../services/http/http';\nimport Dropzone from 'react-dropzone'\n\nclass ArticleCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: [],\n      fid:'',\n    };\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n\n  }\n\n\n  componentDidMount() {\n    let csrfURL = `${apiUrl}/rest/session/token`;\n    fetch(csrfURL)\n      .then(Response => Response)\n      .then(findresponse2 => {\n        this.setState({ csrf: findresponse2 });\n      });\n  }\n\n  async handleSubmit(event) {\n    let title = this.refs.title.value;\n    let token = localStorage.getItem('csrf_token');\n    let fid = '';\n    //let file = this.refs.fileref.value;\n    console.log(this.state.file);\n    //alert(learning_outcomes);\n\n    let fileinfo = await fetch(`${apiUrl}/file/upload/node/article/field_hero_image?_format=json`, {\n      credentials: 'include',\n      method: 'POST',\n      cookies: 'x-access-token',\n      headers: {\n        Accept: 'application/octet-stream',\n        'Content-Type': 'application/octet-stream',\n        'X-CSRF-Token': token,\n        'Content-Disposition': 'file; filename=\"filename.jpg\"',\n        Authorization: 'Basic'\n      },\n      // body: JSON.stringify({\n      //   _links: {\n      //     type: {\n      //       href: `${apiUrl}/rest/type/node/article`\n      //     }\n      //   },\n      //   title: [\n      //     {\n      //       value: title\n      //     }\n      //   ],\n      //   type: [\n      //     {\n      //       target_id: 'article'\n      //     }\n      //   ]\n      // })\n      \"data\": [\n        {\n            \"value\": this.state.file\n        } \n      ]\n    })\n    // .then((resp) => resp.json())\n    //   .then(function(data) {\n    //     //console.log(data.fid[0].value);\n    //     return data.fid[0].value;\n    //     //his.setState({fid:data.fid[0].value});\n    // })\n      ;\n\n    console.log(fileinfo.json());\n    //event.target.reset();\n    this.setState({ updateFlag: true });\n    event.preventDefault();\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <h2>File upload</h2>\n\n        <div className=\"row\">\n          <div className=\"column large-12 callout\">\n            <h4>Bulk upload training resources</h4>\n            <form\n              className=\"form\"\n              id={'resource_create_form'}\n              onSubmit={this.handleSubmit.bind(this)}\n            >\n              \n\n              <div id=\"fileupload\" className=\"row\">\n                <div className=\"column large-12\">\n                  <strong>File upload</strong>\n                  <Dropzone ref=\"fileref\" onDrop={acceptedFiles => \n                    {\n                      //console.log(acceptedFiles)\n                      const reader = new FileReader()\n\n                        reader.onabort = () => console.log('file reading was aborted')\n                        reader.onerror = () => console.log('file reading has failed')\n                        reader.onload = () => {\n                          // Do whatever you want with the file contents\n                          const binaryStr = reader.result\n                          this.setState({file: binaryStr})\n                          //console.log(binaryStr)\n                        }\n                    document.getElementById(\"fileupload\").append(acceptedFiles[0].name)\n                    acceptedFiles.forEach(file => reader.readAsArrayBuffer(file))}\n                  }\n                  >\n                    {({getRootProps, getInputProps}) => (\n                      <section>\n                        <div {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <a href=\"#\">Click to select files</a>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"column large-12\">\n                  <strong>Remarks</strong>\n                  <input type=\"text\" ref=\"title\" required placeholder=\"Remarks\" />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"column large-2\">\n                  <input type=\"submit\" className=\"button\" value=\"Submit\" />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CreateArticles = () => (\n  <Switch>\n    <Route exact path=\"/article/create\" component={ArticleCreate} />\n  </Switch>\n);\n\nexport default CreateArticles;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Collapsible from 'react-collapsible';\nimport ReactModal from 'react-modal';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport CompetencyList from './CompetencyList';\nimport { apiUrl } from '../services/http/http';\nimport CompetencyService from '../services/competency/competency';\nimport ActiveRequestsService from '../services/active-requests/active-requests';\n\nclass AttributeSettings extends React.Component {\n activeRequests = new ActiveRequestsService();\n     competencyService = new CompetencyService();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      path: this.props.location.pathname.split('/'),\n      attributeID: this.props.location.pathname.split('/')[6],\n      frameworkName: this.props.location.pathname.split('/')[2],\n      frameworkList:[],\n      attributeType: '',\n      attribute:'',\n      competencyID:this.props.location.pathname.split('/')[4],\n      competencyUUID: '',\n      competencyTitle: '',\n      attributeTypeID:'',\n      attributeTypeUUID:'',\n      frameworkData:[],\n    };\n     \n\n    this.changeSettings = this.changeSettings.bind(this);\n    this.handleCompetencyChange = this.handleCompetencyChange.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n  }\n\n  async fetchData(){\n\n    // Load the attribute\n\n    let attributeID = this.state.attributeID;\n    let url = `${apiUrl}/node/`+attributeID+`/?_format=json&timestamp=${Date.now()}`;\n    fetch(url)\n    .then(result => result.json())\n    .then(findresponse => {\n        this.setState({ attribute: findresponse });\n      });\n\n    // Load all domains of all frameworks from version_manager API\n    fetch(`${apiUrl}/api/version_manager?_format=json`)\n    .then(result => result.json())\n    .then(findresponse => {\n        this.setState({ frameworkList: findresponse });\n      });\n\n    let result = await this.competencyService.getVersionedDraftFramework(\n        this.state.frameworkName\n      );\n    this.setState({frameworkData: result});\n  }\n\n  componentDidMount() {\n    this.fetchData();\n\n  }\n\n\n  changeSettings(e) {\n    let attributeID = this.state.attributeID;\n    let selectedCompetencyID = this.state.competencyID?this.state.competencyID:this.state.attribute.field_competency[0].target_id;\n    let selectedCompetencyUUID = this.state.competencyUUID?this.state.competencyUUID:this.state.attribute.field_competency[0].target_uuid;\n    let selectedAttributeTypeID = this.state.attributeTypeID?this.state.attributeTypeID:this.state.attribute.field_attribute_type[0].target_id;\n    let selectedAttributeTypeUUID = this.state.attributeTypeUUID?this.state.attributeTypeUUID:this.state.attribute.field_attribute_type[0].target_uuid;\n\n    // console.log(\"competencyID: \"+selectedCompetencyID + \" attributeTypeID: \"+ selectedAttributeTypeID);\n    // if(!selectedCompetencyID){\n    //   selectedCompetencyID = this.state.attribute.field_competency[0].target_id;\n    //   selectedCompetencyUUID = this.state.competency.field_competency[0].target_uuid;\n    // }\n\n    // if(!selectedAttributeTypeID){\n    //   selectedAttributeTypeID = this.state.attribute.field_attribute_type[0].target_id;\n    //   selectedAttributeTypeUUID = this.state.competency.field_attribute_type[0].target_uuid;\n    // }\n\n    this.competencyService.changeAttributeSettings(\n                            attributeID, \n                            selectedCompetencyID, \n                            selectedCompetencyUUID, \n                            selectedAttributeTypeID, \n                            selectedAttributeTypeUUID);\n\n    this.props.history.push('/framework/'+this.state.path[2]+'/manage/competencies/'+this.props.location.pathname.split('/')[4]+'/manage-attributes');\n    e.preventDefault();\n    \n  }\n\n  handleCompetencyChange(event){\n    let dataset = event.target.options[event.target.selectedIndex].dataset;\n    this.setState({competencyID: dataset.id, competencyUUID:dataset.uuid});\n    //console.log(dataset.uuid);\n  }\n\n  handleTypeChange(event){\n    let dataset = event.target.options[event.target.selectedIndex].dataset;\n    this.setState({attributeTypeID: dataset.id, attributeTypeUUID:dataset.uuid});\n    //console.log(dataset.uuid);\n  }\n\n  render() {\n    let attribute_title = \"\";\n    let competency_id = \"\";\n    let competency_uuid = \"\";\n    let competency_title = \"\";\n    let attribute_type_id = \"\";\n    let attribute_type_uuid = \"\";\n    let attribute_type_title = \"\";\n    let attribute = this.state.attribute;\n    let frameworkData = this.state.frameworkData;\n    let frameworkList = this.state.frameworkList;\n    let competencyOptions = [];\n    let competencyArray = [];\n    let attributeTypeOptions = [];\n    let attributeTypeArray = [];\n\n    //console.log(frameworkList);\n\n    if(frameworkList){\n      frameworkList.map(framework => {\n        if(framework.title.toLowerCase() == this.state.frameworkName ){\n           framework.attribute_types.map(attribute_type => {\n                attributeTypeOptions.push(<option key={attribute_type.id} data-id={attribute_type.id} data-uuid={attribute_type.uuid} value={attribute_type.id}>{attribute_type.title }</option>)\n                attributeTypeArray.push({key:attribute_type.id, value:attribute_type.title})\n           })\n         }\n      })\n      //console.log(attributeTypeArray);\n    }\n\n\n    if(frameworkData){\n      frameworkData.map(framework => {\n           framework.domains.map(domain => {\n             domain.competencies.map(competency => {\n                competencyOptions.push(<option key={competency.id} data-id={competency.id} data-uuid={competency.uuid} value={competency.id}>{competency.title }</option>)\n                competencyArray.push({key:competency.id, value:competency.title})\n               })\n           })\n      })\n    }\n\n\n    if(attribute){\n      attribute_title = attribute.title[0].value;\n      competency_id = attribute.field_competency[0].target_id;\n      competency_uuid = attribute.field_competency[0].target_uuid;\n      attribute_type_id = attribute.field_attribute_type[0].target_id;\n      if(competencyArray.length > 0){\n         let obj = competencyArray.find(d => d.key == competency_id);\n        competency_title = obj.value;\n        //console.log(attribute_type_id);\n      }\n      \n      if(attributeTypeArray.length > 0){\n        let obj = attributeTypeArray.find(d => d.key == attribute_type_id);\n        attribute_type_title = obj.value;\n      }\n\n      //console.log(attribute_title);\n    }\n\n   \n    return (\n      <div>\n      <h2>Change attribute settings</h2>\n        <h3>Attribute: {attribute_title}</h3>\n        <table className=\"table hover stack\">\n          <tbody>\n          <tr>\n              <td>\n                Competency:\n              </td>\n              <td>\n                {competency_title}\n              </td>\n              <td rowSpan={2}>\n                \n                <form id={'changeDomainForm'} onSubmit={this.changeSettings.bind(this)}>\n                    <label>Change competency:</label>\n                    <select value={this.state.competencyID?this.state.competencyID:competency_id} onChange={this.handleCompetencyChange}>\n                      {competencyOptions}\n                    </select>\n                     <label>Change attribute type:</label>\n                    <select value={this.state.attributeTypeID?this.state.attributeTypeID:attribute_type_id} onChange={this.handleTypeChange}>\n                      {attributeTypeOptions}\n                    </select>\n                    <input type=\"submit\" className=\"button\" value=\"Save\" />\n   \n              </form>\n              </td>\n\n            </tr>\n            \n            <tr>\n              <td>\n                Attribute type:\n              </td>\n              <td>\n                {attribute_type_title}\n              </td>\n             \n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst AttributeSettingsRoot = () => (\n  <Switch>\n    <Route exact path=\"/framework/:framework/competency/:cid/attribute/:aid/settings\" component={AttributeSettings} />\n\n  </Switch>\n);\n\nexport default AttributeSettingsRoot;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { apiUrl } from '../services/http/http';\nimport ActiveRequestsService from '../services/active-requests/active-requests';\nimport CompetencyService from '../services/competency/competency';\n\nconst $ = window.$;\n\nclass AttributeDemap extends React.Component {\n  activeRequests = new ActiveRequestsService();\n    competencyService = new CompetencyService();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      resourceID: this.props.location.pathname.split('/')[2],\n      attributeID: this.props.location.pathname.split('/')[4],\n      resourceDetails:[],\n      csrf: '',\n    };\n    this.demap = this.demap.bind(this);\n  }\n\n  async demap(e) {\n    //alert(\"mapping removed\");\n    let resource = 1034;\n    let items = [20, 21];\n     //this.activeRequests.startRequest();\n     let result = await this.competencyService.demap(resource, items);\n     console.log(result);\n      //this.activeRequests.finishRequest();\n    //console.log(this.state.resourceDetails);\n    //this.props.history.push(\"/training-resources/\"+this.props.location.pathname.split('/')[2]);\n    //e.preventDefault();\n  }\n\n\n\n\n  componentDidMount() {\n      //fetch(`${apiUrl}`+'/api/resources/?_format=hal_json&id='+ this.state.resourceID)\n      fetch(`${apiUrl}`+'/node/'+ this.state.resourceID + '?_format=hal_json')\n      .then(Response => Response.json())\n      .then(findresponse => {\n        this.setState({\n          resourceDetails: findresponse\n        });\n      });\n\n    let csrfURL = `${apiUrl}/rest/session/token`;\n    fetch(csrfURL)\n      .then(Response => Response)\n      .then(findresponse2 => {\n        this.setState({ csrf: findresponse2 });\n      });\n\n  }\n\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return this.state.attributes === nextState.attributes;\n  // }\n\n  render() {\n    return(\n        <div>\n          <h3>Are you sure you want to remove this mapping? This action cannot be undone!</h3>\n          <button className=\"button\" onClick={this.demap.bind(this)}>Yes</button>\n        </div>\n      )\n  }\n \n\n}\n\nconst AttributeDemapRoot = () => (\n  <Switch>\n    <Route exact path=\"/training-resources/:resource/demap/:attribute\" component={AttributeDemap} />\n  </Switch>\n);\n\nexport default AttributeDemapRoot;\n","import HttpService from '../http/http';\r\n\r\nconst http = new HttpService();\r\nconst loginUrl = '/user/login?_format=json';\r\nconst logoutUrl = '/user/logout';\r\n\r\nexport async function login(username, password) {\r\n  const credentials = { name: username, pass: password };\r\n  try {\r\n    const response = await http.post(loginUrl, credentials);\r\n    const { data } = response;\r\n    localStorage.setItem('roles', data.current_user.roles);\r\n    localStorage.setItem('csrf_token', data.csrf_token);\r\n    localStorage.setItem('logout_token', data.logout_token);\r\n    localStorage.setItem('user', data.current_user.name);\r\n    localStorage.setItem('userid', data.current_user.uid);\r\n    console.log(localStorage.getItem('roles'));\r\n    return data;\r\n  } catch (error) {\r\n    logout();\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('roles');\r\n  localStorage.removeItem('csrf_token');\r\n  localStorage.removeItem('logout_token');\r\n  localStorage.removeItem('userid');\r\n  localStorage.removeItem('user');\r\n  return http.post(logoutUrl);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Masthead from '../containers/masthead/Masthead';\r\nimport ManageAttributes from './ManageAttributes';\r\nimport ManageCompetencies from './ManageCompetencies';\r\nimport CompetencyDetails from './CompetencyDetails';\r\nimport CompetencyList from './CompetencyList';\r\nimport ResourceEdit from './ResourceEdit';\r\nimport ResourceCreate from './ResourceCreate';\r\nimport ResourceDetails from './ResourceDetails';\r\nimport ResourcesList from './ResourcesList';\r\nimport ResourcesHome from './ResourcesHome';\r\nimport ChangePassword from './ChangePassword';\r\nimport About from '../components/about/About';\r\nimport Frameworks from './Frameworks';\r\nimport ArticleCreate from './ArticleCreate';\r\nimport AttributeMap from './AttributeMap';\r\nimport CompetencySettings from './CompetencySettings';\r\nimport AttributeSettings from './AttributeSettings';\r\nimport AttributeDemap from './AttributeDemap';\r\n\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { login, logout } from '../services/auth/auth';\r\nimport ActiveRequestsService from '../services/active-requests/active-requests';\r\n\r\nconst $ = window.$;\r\n\r\nclass Root extends Component {\r\n  state = {\r\n    isActive: false,\r\n    roles: localStorage.getItem('roles') || '',\r\n    user: localStorage.getItem('user') || ''\r\n  };\r\n  activeRequests = new ActiveRequestsService();\r\n\r\n  componentDidMount() {\r\n    $(document).foundation();\r\n    $(document).foundationExtendEBI();\r\n\r\n    this.setState({ isActive: this.activeRequests.isActive });\r\n    this.subcription = this.activeRequests.addEventListener(\r\n      this.handleActiveRequests\r\n    );\r\n\r\n    window.addEventListener('storage', this.detectUserChangesFromOtherTabs);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.subcription) {\r\n      this.activeRequests.removeEventListener(this.subcription);\r\n    }\r\n    window.removeEventListener('storage', this.detectUserChangesFromOtherTabs);\r\n  }\r\n\r\n  handleActiveRequests = hasPendingRequests => {\r\n    this.setState({ isActive: hasPendingRequests });\r\n  };\r\n\r\n  detectUserChangesFromOtherTabs = ({ key, newValue }) => {\r\n    if (key === 'user') {\r\n      if (newValue) {\r\n        this.setState({\r\n          user: localStorage.getItem('user'),\r\n          roles: localStorage.getItem('roles')\r\n        });\r\n      } else {\r\n        this.setState({ user: '', roles: '' });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleLogin = async (username, password) => {\r\n    try {\r\n      await login(username, password);\r\n      this.setState({\r\n        user: localStorage.getItem('user'),\r\n        roles: localStorage.getItem('roles')\r\n      });\r\n    } catch (error) {\r\n      window.console.error(error);\r\n      if (error.response) {\r\n        switch (error.response.status) {\r\n          case 400:\r\n            window.alert(error.response.data.message);\r\n            return;\r\n          default:\r\n            window.alert(\r\n              'Sorry, there was an unknown login problem, please try again.'\r\n            );\r\n        }\r\n        window.alert(\r\n          'Sorry, there was an unknown login problem, please try again.'\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.setState({ user: '', roles: '' });\r\n    logout();\r\n  };\r\n\r\n  render() {\r\n    const { isActive, roles, user } = this.state;\r\n    return (\r\n      <>\r\n        <SnackbarProvider\r\n          maxSnack={1}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n          preventDuplicate\r\n        >\r\n          <Masthead\r\n            roles={roles}\r\n            user={user}\r\n            isActive={isActive}\r\n            onLogin={this.handleLogin}\r\n            onLogout={this.handleLogout}\r\n          />\r\n\r\n          <section id=\"main-content-area\" className=\"row\" role=\"main\">\r\n            <main className=\"column\">\r\n              <Switch>\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('content_manager')}\r\n                  path=\"/training-resource/edit/:nid\"\r\n                  component={ResourceEdit}\r\n                />\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('content_manager')}\r\n                  path=\"/training-resource/create\"\r\n                  component={ResourceCreate}\r\n                />\r\n\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('framework_manager')}\r\n                  path=\"/framework/:framework/competency/:cid/attribute/:aid/settings\"\r\n                  component={AttributeSettings}\r\n                />\r\n\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('framework_manager')}\r\n                  path=\"/framework/:framework/manage/competencies/:cid/manage-attributes\"\r\n                  component={ManageAttributes}\r\n                />\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('framework_manager')}\r\n                  path=\"/framework/:framework/manage/competencies/:domainId?\"\r\n                  component={ManageCompetencies}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/framework/:framework/:version/competency/details/:cid\"\r\n                  component={CompetencyDetails}\r\n                />\r\n\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('framework_manager')}\r\n                  path=\"/framework/:framework/competency/:id/settings\"\r\n                  component={CompetencySettings}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/framework/:framework/:version\"\r\n                  component={CompetencyList}\r\n                />\r\n\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('content_manager')}\r\n                  path=\"/training-resources/:id/map/:framework\"\r\n                  component={AttributeMap}\r\n                />\r\n\r\n                <ProtectedRoute\r\n                  condition={!!user && roles.includes('content_manager')}\r\n                  path=\"/training-resources/:resource/demap/:attribute\"\r\n                  component={AttributeDemap}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/training-resources/:id\"\r\n                  component={ResourceDetails}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/all-training-resources\"\r\n                  component={ResourcesList}\r\n                />\r\n                <Route\r\n                  path=\"/training-resources-home\"\r\n                  component={ResourcesHome}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/user/change/password\"\r\n                  component={ChangePassword}\r\n                />\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/\" component={Frameworks} />\r\n              </Switch>\r\n            </main>\r\n          </section>\r\n        </SnackbarProvider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Root;\r\n\r\nclass ProtectedRoute extends Component {\r\n  render() {\r\n    const { component: Component, condition, ...props } = this.props;\r\n    return (\r\n      <Route\r\n        {...props}\r\n        render={props =>\r\n          condition ? <Component {...props} /> : <Redirect to=\"/\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nimport Root from './app/containers/Root';\r\nimport Modal from 'react-modal';\r\n\r\nconst root = document.getElementById('root');\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Root />\r\n  </BrowserRouter>,\r\n  root\r\n);\r\n\r\nModal.setAppElement(root);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meter\":\"progress-bar_meter__2axTP\",\"progress\":\"progress-bar_progress__3d3PT\"};"],"sourceRoot":""}